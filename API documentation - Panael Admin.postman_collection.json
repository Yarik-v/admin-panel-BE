{
	"info": {
		"_postman_id": "8939c333-6f3b-4b31-966a-900efc0ccfee",
		"name": "API documentation - Panael Admin",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "session",
					"item": []
				},
				{
					"name": "dictionary",
					"item": [
						{
							"name": "Returns Strim Services list.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200, response is json\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.json;",
											"    var jsonData = pm.response.json();",
											"    pm.globals.set(\"stream-services\", jsonData[\"auto\"]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/dictionary/stream-services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"dictionary",
										"stream-services"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": " (This can only be one of http,https)"
										},
										{
											"key": "environment",
											"value": "{{environment}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/dictionary/stream-services",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"dictionary",
												"stream-services"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns Bitrate list.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200, response is json\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.json;",
											"    var jsonData = pm.response.json();",
											"    pm.globals.set(\"bitrate\", Object.keys(jsonData).pop());",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/dictionary/bitrate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"dictionary",
										"bitrate"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": " (This can only be one of http,https)"
										},
										{
											"key": "environment",
											"value": "{{environment}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/dictionary/bitrate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"dictionary",
												"bitrate"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns supporting Stream Standard.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200, response is json\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.json;",
											"    var jsonData = pm.response.json();",
											"    pm.globals.set(\"stream-standard\", jsonData[\"dash_hevc\"]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/dictionary/stream-standard/{{Soft_Id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"dictionary",
										"stream-standard",
										"{{Soft_Id}}"
									]
								}
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/dictionary/stream-standard/:softId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"dictionary",
												"stream-standard",
												":softId"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												},
												{
													"key": "softId",
													"value": "aute amet",
													"description": "(Required) softId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns Timeshift list.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200, response is json\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.json;",
											"    var jsonData = pm.response.json();",
											"    pm.globals.set(\"timeshift\", jsonData[\"0\"]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/dictionary/timeshift",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"dictionary",
										"timeshift"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": " (This can only be one of http,https)"
										},
										{
											"key": "environment",
											"value": "{{environment}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/dictionary/timeshift",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"dictionary",
												"timeshift"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns Http Caching list.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200, response is json\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.json;",
											"    var jsonData = pm.response.json();",
											"    pm.globals.set(\"caching\", jsonData[\"1500\"]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/dictionary/caching",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"dictionary",
										"caching"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": " (This can only be one of http,https)"
										},
										{
											"key": "environment",
											"value": "{{environment}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/dictionary/caching",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"dictionary",
												"caching"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns Epg Sources.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200, response is json\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.json;",
											"    var jsonData = pm.response.json();",
											"    pm.globals.set(\"epg-sources\", jsonData[0].name);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/dictionary/epg-sources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"dictionary",
										"epg-sources"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": " (This can only be one of http,https)"
										},
										{
											"key": "environment",
											"value": "{{environment}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/dictionary/epg-sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"dictionary",
												"epg-sources"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns Channels Urls Ecryption Type list.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200, response is json\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.json;",
											"    var jsonData = pm.response.json();",
											"    pm.globals.set(\"channels-urls-encryption-type\", jsonData[1]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/dictionary/channels-urls-encryption-type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"dictionary",
										"channels-urls-encryption-type"
									]
								}
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/dictionary/channels-urls-ecryption-type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"dictionary",
												"channels-urls-ecryption-type"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns Channels Urls Profile list.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200, response is json\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.json;",
											"    var jsonData = pm.response.json();",
											"    pm.globals.set(\"channel-url-profiles\", jsonData[0].id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/dictionary/channel-url-profiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"dictionary",
										"channel-url-profiles"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": " (This can only be one of http,https)"
										},
										{
											"key": "environment",
											"value": "{{environment}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/dictionary/channel-url-profiles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"dictionary",
												"channel-url-profiles"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns Packets Type list.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200, response is json\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.json;",
											"    var jsonData = pm.response.json();",
											"    pm.globals.set(\"packets-type\", jsonData[\"general\"]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/dictionary/packets-type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"dictionary",
										"packets-type"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": " (This can only be one of http,https)"
										},
										{
											"key": "environment",
											"value": "{{environment}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/dictionary/packets-type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"dictionary",
												"packets-type"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns Products Store list.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200, response is json\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.json;",
											"    var jsonData = pm.response.json();",
											"    pm.globals.set(\"products-store\", jsonData[\"2\"]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/dictionary/products-store",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"dictionary",
										"products-store"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": " (This can only be one of http,https)"
										},
										{
											"key": "environment",
											"value": "{{environment}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/dictionary/products-store",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"dictionary",
												"products-store"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns Products Type list.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200, response is json\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.json;",
											"    var jsonData = pm.response.json();",
											"    pm.globals.set(\"products-type\", jsonData[\"purchase\"]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/dictionary/products-type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"dictionary",
										"products-type"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": " (This can only be one of http,https)"
										},
										{
											"key": "environment",
											"value": "{{environment}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/dictionary/products-type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"dictionary",
												"products-type"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns Devices Type list.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200, response is json\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.json;",
											"    var jsonData = pm.response.json();",
											"    pm.globals.set(\"device-type\", jsonData[\"stb\"]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/dictionary/device-type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"dictionary",
										"device-type"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": " (This can only be one of http,https)"
										},
										{
											"key": "environment",
											"value": "{{environment}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/dictionary/device-type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"dictionary",
												"device-type"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns Devices Standard list.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200, response is json\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.json;",
											"    var jsonData = pm.response.json();",
											"    pm.globals.set(\"device-standard\", jsonData[\"\"]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/dictionary/device-standard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"dictionary",
										"device-standard"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": " (This can only be one of http,https)"
										},
										{
											"key": "environment",
											"value": "{{environment}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/dictionary/device-standard",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"dictionary",
												"device-standard"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns Geotargeting Action list.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200, response is json\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.json;",
											"    var jsonData = pm.response.json();",
											"    pm.globals.set(\"geotargeting-action\", jsonData[\"allow\"]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/dictionary/geotargeting-action",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"dictionary",
										"geotargeting-action"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": " (This can only be one of http,https)"
										},
										{
											"key": "environment",
											"value": "{{environment}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/dictionary/geotargeting-action",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"dictionary",
												"geotargeting-action"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{TOKEN}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "client/{id}",
					"item": [
						{
							"name": "Returns list Clients.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200, response is json\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.json;",
											"    var jsonData = pm.response.json();",
											"    pm.globals.set(\"Client_id\", jsonData.items[0].id);",
											"    // console.log('Client_id = ', jsonData.items[0].id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/clients?perPage=5&page=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"clients"
									],
									"query": [
										{
											"key": "search",
											"value": "aute amet",
											"description": "Values that need to be considered for search",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "-id_packet",
											"description": "Field by that need to be sorted",
											"disabled": true
										},
										{
											"key": "perPage",
											"value": "5",
											"description": "(Required) Count items in page"
										},
										{
											"key": "page",
											"value": "1",
											"description": "(Required) Numeric page"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": " (This can only be one of http,https)"
										},
										{
											"key": "environment",
											"value": "{{environment}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/clients?search=aute amet&sort=-id_packet&perPage=5&page=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"clients"
											],
											"query": [
												{
													"key": "search",
													"value": "aute amet"
												},
												{
													"key": "sort",
													"value": "-id_packet"
												},
												{
													"key": "perPage",
													"value": "5"
												},
												{
													"key": "page",
													"value": "1"
												}
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/clients?search=aute amet&sort=-id_packet&perPage=5&page=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"clients"
											],
											"query": [
												{
													"key": "search",
													"value": "aute amet"
												},
												{
													"key": "sort",
													"value": "-id_packet"
												},
												{
													"key": "perPage",
													"value": "5"
												},
												{
													"key": "page",
													"value": "1"
												}
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/clients?search=aute amet&sort=-id_packet&perPage=5&page=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"clients"
											],
											"query": [
												{
													"key": "search",
													"value": "aute amet"
												},
												{
													"key": "sort",
													"value": "-id_packet"
												},
												{
													"key": "perPage",
													"value": "5"
												},
												{
													"key": "page",
													"value": "1"
												}
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
								}
							]
						},
						{
							"name": "Returns client action log.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200, response is json\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.json;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/client/{{Client_id}}/log?perPage=5&page=1&sort=dt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"client",
										"{{Client_id}}",
										"log"
									],
									"query": [
										{
											"key": "perPage",
											"value": "5",
											"description": "(Required) Count items in page"
										},
										{
											"key": "page",
											"value": "1",
											"description": "(Required) Numeric page"
										},
										{
											"key": "sort",
											"value": "dt",
											"description": "Field by that need to be sorted"
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/client/:id/log?perPage=5&page=1&sort=dt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"client",
												":id",
												"log"
											],
											"query": [
												{
													"key": "perPage",
													"value": "5"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort",
													"value": "dt"
												}
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												},
												{
													"key": "id",
													"value": "-43192755",
													"description": "(Required) Client id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/client/:id/log?perPage=5&page=1&sort=dt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"client",
												":id",
												"log"
											],
											"query": [
												{
													"key": "perPage",
													"value": "5"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort",
													"value": "dt"
												}
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												},
												{
													"key": "id",
													"value": "-43192755",
													"description": "(Required) Client id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/client/:id/log?perPage=5&page=1&sort=dt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"client",
												":id",
												"log"
											],
											"query": [
												{
													"key": "perPage",
													"value": "5"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort",
													"value": "dt"
												}
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												},
												{
													"key": "id",
													"value": "-43192755",
													"description": "(Required) Client id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
								}
							]
						},
						{
							"name": "Returns client authorization  log.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200, response is json\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.json;",
											"    // console.log('pm.response: ', pm.response.json());",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/client/{{Client_id}}/authorization-log?perPage=5&page=1&sort=-reason",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"client",
										"{{Client_id}}",
										"authorization-log"
									],
									"query": [
										{
											"key": "perPage",
											"value": "5",
											"description": "(Required) Count items in page"
										},
										{
											"key": "page",
											"value": "1",
											"description": "(Required) Numeric page"
										},
										{
											"key": "sort",
											"value": "-reason",
											"description": "Field by that need to be sorted"
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/client/:id/authorization-log?perPage=5&page=1&sort=-reason",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"client",
												":id",
												"authorization-log"
											],
											"query": [
												{
													"key": "perPage",
													"value": "5"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort",
													"value": "-reason"
												}
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												},
												{
													"key": "id",
													"value": "-43192755",
													"description": "(Required) Client id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/client/:id/authorization-log?perPage=5&page=1&sort=-reason",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"client",
												":id",
												"authorization-log"
											],
											"query": [
												{
													"key": "perPage",
													"value": "5"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort",
													"value": "-reason"
												}
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												},
												{
													"key": "id",
													"value": "-43192755",
													"description": "(Required) Client id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/client/:id/authorization-log?perPage=5&page=1&sort=-reason",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"client",
												":id",
												"authorization-log"
											],
											"query": [
												{
													"key": "perPage",
													"value": "5"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort",
													"value": "-reason"
												}
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												},
												{
													"key": "id",
													"value": "-43192755",
													"description": "(Required) Client id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
								}
							]
						},
						{
							"name": "Returns client switching channel log.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200, response is json\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.json;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/client/{{Client_id}}/channel-switching?perPage=5&page=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"client",
										"{{Client_id}}",
										"channel-switching"
									],
									"query": [
										{
											"key": "perPage",
											"value": "5",
											"description": "(Required) Count items in page"
										},
										{
											"key": "page",
											"value": "1",
											"description": "(Required) Numeric page"
										},
										{
											"key": "sort",
											"value": "-stream_standard",
											"description": "Field by that need to be sorted",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/client/:id/channel-switching?perPage=5&page=1&sort=-stream_standard",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"client",
												":id",
												"channel-switching"
											],
											"query": [
												{
													"key": "perPage",
													"value": "5"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort",
													"value": "-stream_standard"
												}
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												},
												{
													"key": "id",
													"value": "-43192755",
													"description": "(Required) Client id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/client/:id/channel-switching?perPage=5&page=1&sort=-stream_standard",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"client",
												":id",
												"channel-switching"
											],
											"query": [
												{
													"key": "perPage",
													"value": "5"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort",
													"value": "-stream_standard"
												}
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												},
												{
													"key": "id",
													"value": "-43192755",
													"description": "(Required) Client id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/client/:id/channel-switching?perPage=5&page=1&sort=-stream_standard",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"client",
												":id",
												"channel-switching"
											],
											"query": [
												{
													"key": "perPage",
													"value": "5"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort",
													"value": "-stream_standard"
												}
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												},
												{
													"key": "id",
													"value": "-43192755",
													"description": "(Required) Client id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
								}
							]
						},
						{
							"name": "Returns client devices.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200, response is json\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.json;",
											"    var jsonData = pm.response.json();",
											"    pm.globals.set(\"Soft_Id\", jsonData.items[0].softid);",
											"    pm.globals.set(\"serial_device\", jsonData.items[1].serial);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/client/{{Client_id}}/devices?perPage=5&page=1&sort=-last_access",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"client",
										"{{Client_id}}",
										"devices"
									],
									"query": [
										{
											"key": "perPage",
											"value": "5",
											"description": "(Required) Count items in page"
										},
										{
											"key": "page",
											"value": "1",
											"description": "(Required) Numeric page"
										},
										{
											"key": "sort",
											"value": "-last_access",
											"description": "Field by that need to be sorted"
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/client/:id/devices?perPage=5&page=1&sort=-last_access",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"client",
												":id",
												"devices"
											],
											"query": [
												{
													"key": "perPage",
													"value": "5"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort",
													"value": "-last_access"
												}
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												},
												{
													"key": "id",
													"value": "-43192755",
													"description": "(Required) Client id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/client/:id/devices?perPage=5&page=1&sort=-last_access",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"client",
												":id",
												"devices"
											],
											"query": [
												{
													"key": "perPage",
													"value": "5"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort",
													"value": "-last_access"
												}
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												},
												{
													"key": "id",
													"value": "-43192755",
													"description": "(Required) Client id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/client/:id/devices?perPage=5&page=1&sort=-last_access",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"client",
												":id",
												"devices"
											],
											"query": [
												{
													"key": "perPage",
													"value": "5"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort",
													"value": "-last_access"
												}
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												},
												{
													"key": "id",
													"value": "-43192755",
													"description": "(Required) Client id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
								}
							]
						},
						{
							"name": "Returns device config.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200, response is json\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.json;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/client/{{Client_id}}/device/{{serial_device}}/{{Soft_Id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"client",
										"{{Client_id}}",
										"device",
										"{{serial_device}}",
										"{{Soft_Id}}"
									]
								}
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/client/:id/device/:serial/:softId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"client",
												":id",
												"device",
												":serial",
												":softId"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												},
												{
													"key": "id",
													"value": "-43192755",
													"description": "(Required) Client id"
												},
												{
													"key": "serial",
													"value": "-43192755",
													"description": "(Required) serial device"
												},
												{
													"key": "softId",
													"value": "aute amet",
													"description": "(Required) SoftId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/client/:id/device/:serial/:softId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"client",
												":id",
												"device",
												":serial",
												":softId"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												},
												{
													"key": "id",
													"value": "-43192755",
													"description": "(Required) Client id"
												},
												{
													"key": "serial",
													"value": "-43192755",
													"description": "(Required) serial device"
												},
												{
													"key": "softId",
													"value": "aute amet",
													"description": "(Required) SoftId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/client/:id/device/:serial/:softId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"client",
												":id",
												"device",
												":serial",
												":softId"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												},
												{
													"key": "id",
													"value": "-43192755",
													"description": "(Required) Client id"
												},
												{
													"key": "serial",
													"value": "-43192755",
													"description": "(Required) serial device"
												},
												{
													"key": "softId",
													"value": "aute amet",
													"description": "(Required) SoftId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
								}
							]
						},
						{
							"name": "Returns Client.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200, response is json\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.json;",
											"    // console.log('client_id = ', responseJSON.id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/client/{{Client_id}}/info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"client",
										"{{Client_id}}",
										"info"
									],
									"query": [
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/client/:id/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"client",
												":id",
												"info"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												},
												{
													"key": "id",
													"value": "-43192755",
													"description": "(Required) Client id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/client/:id/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"client",
												":id",
												"info"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												},
												{
													"key": "id",
													"value": "-43192755",
													"description": "(Required) Client id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/client/:id/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"client",
												":id",
												"info"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												},
												{
													"key": "id",
													"value": "-43192755",
													"description": "(Required) Client id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
								}
							]
						},
						{
							"name": "General information.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200, response is json\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.json;",
											"    var jsonData = pm.response.json();",
											"    pm.globals.set(\"Session_id\", Object.keys(jsonData).pop());",
											"    });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/session/{{Client_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"session",
										"{{Client_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/session/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"session",
												":id"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												},
												{
													"key": "id",
													"value": "-43192755",
													"description": "(Required) Client id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Kill user session.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/session/kill/{{Session_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"session",
										"kill",
										"{{Session_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/session/kill/:sessionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"session",
												"kill",
												":sessionId"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												},
												{
													"key": "sessionId",
													"value": "aute amet",
													"description": "(Required) Session id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "user",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Returns users.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200, response is json\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.be.json;",
													"    // var jsonData = pm.response.json();",
													"    // pm.globals.set(\"User_id\", jsonData.items[0].id);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/users?perPage=5&page=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users"
											],
											"query": [
												{
													"key": "search",
													"value": "aute amet",
													"description": "Values that need to be considered for search",
													"disabled": true
												},
												{
													"key": "perPage",
													"value": "5",
													"description": "(Required) Count items in page"
												},
												{
													"key": "page",
													"value": "1",
													"description": "(Required) Numeric page"
												}
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Returns Users list.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users?search=aute amet&perPage=5&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users"
													],
													"query": [
														{
															"key": "search",
															"value": "aute amet"
														},
														{
															"key": "perPage",
															"value": "5"
														},
														{
															"key": "page",
															"value": "1"
														}
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users?search=aute amet&perPage=5&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users"
													],
													"query": [
														{
															"key": "search",
															"value": "aute amet"
														},
														{
															"key": "perPage",
															"value": "5"
														},
														{
															"key": "page",
															"value": "1"
														}
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users?search=aute amet&perPage=5&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users"
													],
													"query": [
														{
															"key": "search",
															"value": "aute amet"
														},
														{
															"key": "perPage",
															"value": "5"
														},
														{
															"key": "page",
															"value": "1"
														}
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
										}
									]
								},
								{
									"name": "Find user by ID.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200, response is json\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.be.json;",
													"    let email = 'qwerty'+Math.random()+'@domain.com';",
													"    pm.globals.set('Email',email);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/user/{{User_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"{{User_id}}"
											]
										}
									},
									"response": [
										{
											"name": "Returns User.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/user/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"user",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "aute amet",
															"description": "(Required) Id User"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"sunt aute nisi id incididunt\",\n \"username\": \"sed reprehender\",\n \"email\": \"tempor occaecat\",\n \"roles\": [\n  \"ROLE_TECH\",\n  \"ROLE_ADMIN\"\n ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/user/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"user",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "aute amet",
															"description": "(Required) Id User"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/user/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"user",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "aute amet",
															"description": "(Required) Id User"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
										},
										{
											"name": "Returned when the Item is not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/user/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"user",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "aute amet",
															"description": "(Required) Id User"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 404,\n \"messages\": \"Item not found.\"\n}"
										}
									]
								},
								{
									"name": "Update User.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200, response is json\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.be.json;",
													"    // pm.globals.get('Email');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"sed\",\n    \"last_name\": \"minim est aute laboris\",\n    \"password\": \"labore nostrud\",\n    \"email\": \"{{$randomExampleEmail}}\",\n    \"roles\": [\n        \"ROLE_ADMIN\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/{{User_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"{{User_id}}"
											]
										}
									},
									"response": [
										{
											"name": "Return  User.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"sed\",\n    \"last_name\": \"minim est aute laboris\",\n    \"password\": \"labore nostrud\",\n    \"email\": \"ex c\",\n    \"roles\": [\n        \"ROLE_TECH\",\n        \"ROLE_ADMIN\"\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/user/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"user",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "aute amet",
															"description": "(Required) Id of User to update"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"sunt aute nisi id incididunt\",\n \"username\": \"sed reprehender\",\n \"email\": \"tempor occaecat\",\n \"roles\": [\n  \"ROLE_TECH\",\n  \"ROLE_ADMIN\"\n ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"sed\",\n    \"last_name\": \"minim est aute laboris\",\n    \"password\": \"labore nostrud\",\n    \"email\": \"ex c\",\n    \"roles\": [\n        \"ROLE_TECH\",\n        \"ROLE_ADMIN\"\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/user/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"user",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "aute amet",
															"description": "(Required) Id of User to update"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"sed\",\n    \"last_name\": \"minim est aute laboris\",\n    \"password\": \"labore nostrud\",\n    \"email\": \"ex c\",\n    \"roles\": [\n        \"ROLE_TECH\",\n        \"ROLE_ADMIN\"\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/user/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"user",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "aute amet",
															"description": "(Required) Id of User to update"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
										},
										{
											"name": "Returned when the Item is not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"sed\",\n    \"last_name\": \"minim est aute laboris\",\n    \"password\": \"labore nostrud\",\n    \"email\": \"ex c\",\n    \"roles\": [\n        \"ROLE_TECH\",\n        \"ROLE_ADMIN\"\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/user/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"user",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "aute amet",
															"description": "(Required) Id of User to update"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 404,\n \"messages\": \"Item not found.\"\n}"
										}
									]
								},
								{
									"name": "Delete user by ID.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {",
													"    pm.response.to.have.status(204);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/user/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{User_id}}",
													"description": "(Required) Id User"
												}
											]
										}
									},
									"response": [
										{
											"name": "Returned when successful.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/user/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"user",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "aute amet",
															"description": "(Required) Id User"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/user/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"user",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "aute amet",
															"description": "(Required) Id User"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/user/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"user",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "aute amet",
															"description": "(Required) Id User"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
										},
										{
											"name": "Returned when the Item is not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/user/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"user",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "aute amet",
															"description": "(Required) Id User"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 404,\n \"messages\": \"Item not found.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Create User.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201, response is json\", function () {",
											"    pm.response.to.have.status(201);",
											"    pm.response.to.be.json;",
											"    var jsonData = pm.response.json();",
											"    pm.globals.set(\"User_id\", jsonData.id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"maykl101\",\n    \"last_name\": \"born-04\",\n    \"password\": \"1111\",\n    \"email\": \"{{$randomExampleEmail}}\",\n    \"roles\": [\n        \"ROLE_ADMIN\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"user"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": " (This can only be one of http,https)"
										},
										{
											"key": "environment",
											"value": "{{environment}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Return  User.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"sed\",\n    \"last_name\": \"minim est aute laboris\",\n    \"password\": \"labore nostrud\",\n    \"email\": \"ex c\",\n    \"roles\": [\n        \"ROLE_TECH\",\n        \"ROLE_ADMIN\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"aliquip laboris incididunt\",\n \"username\": \"in cillum\",\n \"email\": \"enim aliqua\",\n \"roles\": [\n  \"ROLE_ADMIN\",\n  \"ROLE_TECH\"\n ]\n}"
								},
								{
									"name": "Returned when bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"sed\",\n    \"last_name\": \"minim est aute laboris\",\n    \"password\": \"labore nostrud\",\n    \"email\": \"ex c\",\n    \"roles\": [\n        \"ROLE_TECH\",\n        \"ROLE_ADMIN\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"Validation\",\n \"title\": \"Bad Request\",\n \"messages\": {\n  \"propertyPath\": \"eiusmod reprehenderit et fugiat\",\n  \"message\": \"mollit velit laboris reprehenderit adipisicing\"\n }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"sed\",\n    \"last_name\": \"minim est aute laboris\",\n    \"password\": \"labore nostrud\",\n    \"email\": \"ex c\",\n    \"roles\": [\n        \"ROLE_TECH\",\n        \"ROLE_ADMIN\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"sed\",\n    \"last_name\": \"minim est aute laboris\",\n    \"password\": \"labore nostrud\",\n    \"email\": \"ex c\",\n    \"roles\": [\n        \"ROLE_TECH\",\n        \"ROLE_ADMIN\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "channels",
					"item": [
						{
							"name": "group",
							"item": [
								{
									"name": "{group Id}",
									"item": [
										{
											"name": "Return Group of Channels data.",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200, response is json\", function () {",
															"    pm.response.to.have.status(200);",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{TOKEN}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/channels/group/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"channels",
														"group",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "{{groups_id}}",
															"description": "(Required) Id Group of Channels"
														}
													]
												}
											},
											"response": [
												{
													"name": "Return Group of Channels data.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channels/group/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channels",
																"group",
																":groupId"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "groupId",
																	"value": "-43192755",
																	"description": "(Required) Id Group of Channels"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": -2949108,\n \"name\": \"fugiat pariatur\",\n \"color\": \"ex tempor deserunt exercitation\",\n \"sort\": 93908806\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channels/group/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channels",
																"group",
																":groupId"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "groupId",
																	"value": "-43192755",
																	"description": "(Required) Id Group of Channels"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
												},
												{
													"name": "Access Denied",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channels/group/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channels",
																"group",
																":groupId"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "groupId",
																	"value": "-43192755",
																	"description": "(Required) Id Group of Channels"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
												},
												{
													"name": "Returned when the Item is not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channels/group/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channels",
																"group",
																":groupId"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "groupId",
																	"value": "-43192755",
																	"description": "(Required) Id Group of Channels"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 404,\n \"messages\": \"Item not found.\"\n}"
												}
											]
										},
										{
											"name": "Update Group of Channel data.",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200, response is json\", function () {",
															"    pm.response.to.have.status(200);",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{TOKEN}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"anim1\",\n    \"color\": \"in\",\n    \"sort\": 198\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/channels/group/{{groups_id}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"channels",
														"group",
														"{{groups_id}}"
													]
												}
											},
											"response": [
												{
													"name": "Return Group of Channels data.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"anim\",\n    \"color\": \"in\",\n    \"sort\": 198\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channels/group/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channels",
																"group",
																":groupId"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "groupId",
																	"value": "-43192755",
																	"description": "(Required) Id Group of Channels"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": -2949108,\n \"name\": \"fugiat pariatur\",\n \"color\": \"ex tempor deserunt exercitation\",\n \"sort\": 93908806\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"anim\",\n    \"color\": \"in\",\n    \"sort\": 198\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channels/group/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channels",
																"group",
																":groupId"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "groupId",
																	"value": "-43192755",
																	"description": "(Required) Id Group of Channels"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
												},
												{
													"name": "Access Denied",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"anim\",\n    \"color\": \"in\",\n    \"sort\": 198\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channels/group/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channels",
																"group",
																":groupId"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "groupId",
																	"value": "-43192755",
																	"description": "(Required) Id Group of Channels"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
												},
												{
													"name": "Returned when the Item is not found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"anim\",\n    \"color\": \"in\",\n    \"sort\": 198\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channels/group/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channels",
																"group",
																":groupId"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "groupId",
																	"value": "-43192755",
																	"description": "(Required) Id Group of Channels"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 404,\n \"messages\": \"Item not found.\"\n}"
												}
											]
										},
										{
											"name": "Delete Group of Channel.",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {",
															"    pm.response.to.have.status(204);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{TOKEN}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/channels/group/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"channels",
														"group",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "{{groups_id}}",
															"description": "(Required) Id Group of Channel"
														}
													]
												}
											},
											"response": [
												{
													"name": "Successful operation. No Content.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channels/group/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channels",
																"group",
																":groupId"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "groupId",
																	"value": "-43192755",
																	"description": "(Required) Id Group of Channel"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channels/group/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channels",
																"group",
																":groupId"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "groupId",
																	"value": "-43192755",
																	"description": "(Required) Id Group of Channel"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
												},
												{
													"name": "Access Denied",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channels/group/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channels",
																"group",
																":groupId"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "groupId",
																	"value": "-43192755",
																	"description": "(Required) Id Group of Channel"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
												},
												{
													"name": "Returned when the Item is not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channels/group/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channels",
																"group",
																":groupId"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "groupId",
																	"value": "-43192755",
																	"description": "(Required) Id Group of Channel"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 404,\n \"messages\": \"Item not found.\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Create Group of Channel.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"anim\",\n    \"color\": \"in\",\n    \"sort\": 198\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/channels/group",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"channels",
												"group"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Return Group of Channel data.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"anim\",\n    \"color\": \"in\",\n    \"sort\": 198\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/channels/group",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"channels",
														"group"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": -2949108,\n \"name\": \"fugiat pariatur\",\n \"color\": \"ex tempor deserunt exercitation\",\n \"sort\": 93908806\n}"
										},
										{
											"name": "Returned when bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"anim\",\n    \"color\": \"in\",\n    \"sort\": 198\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/channels/group",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"channels",
														"group"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"Validation\",\n \"title\": \"Bad Request\",\n \"messages\": {\n  \"propertyPath\": \"eiusmod reprehenderit et fugiat\",\n  \"message\": \"mollit velit laboris reprehenderit adipisicing\"\n }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"anim\",\n    \"color\": \"in\",\n    \"sort\": 198\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/channels/group",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"channels",
														"group"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"anim\",\n    \"color\": \"in\",\n    \"sort\": 198\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/channels/group",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"channels",
														"group"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Returns list Channels.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200, response is json\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.json;",
											"    var jsonData = pm.response.json();",
											"    pm.globals.set(\"channels_id\", jsonData.items[1].id);",
											"    // pm.globals.set(\"icon\", jsonData.items[3].icon);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/channels?sort=name&perPage=5&page=1&showDeleted=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"channels"
									],
									"query": [
										{
											"key": "sort",
											"value": "name",
											"description": "Field by that need to be sorted"
										},
										{
											"key": "search",
											"value": "aute amet",
											"description": "Values that need to be considered for search",
											"disabled": true
										},
										{
											"key": "perPage",
											"value": "5",
											"description": "Count items in page"
										},
										{
											"key": "page",
											"value": "1",
											"description": "Numeric page"
										},
										{
											"key": "showDeleted",
											"value": "0",
											"description": "Show deleted channels. 0 - NO, others - YES."
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": " (This can only be one of http,https)"
										},
										{
											"key": "environment",
											"value": "{{environment}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns list Channels.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/channels?sort=name&search=aute amet&perPage=5&page=1&showDeleted=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"channels"
											],
											"query": [
												{
													"key": "sort",
													"value": "name"
												},
												{
													"key": "search",
													"value": "aute amet"
												},
												{
													"key": "perPage",
													"value": "5"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "showDeleted",
													"value": "0"
												}
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Returned when bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/channels?sort=name&search=aute amet&perPage=5&page=1&showDeleted=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"channels"
											],
											"query": [
												{
													"key": "sort",
													"value": "name"
												},
												{
													"key": "search",
													"value": "aute amet"
												},
												{
													"key": "perPage",
													"value": "5"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "showDeleted",
													"value": "0"
												}
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"Validation\",\n \"title\": \"Bad Request\",\n \"messages\": {\n  \"propertyPath\": \"eiusmod reprehenderit et fugiat\",\n  \"message\": \"mollit velit laboris reprehenderit adipisicing\"\n }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/channels?sort=name&search=aute amet&perPage=5&page=1&showDeleted=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"channels"
											],
											"query": [
												{
													"key": "sort",
													"value": "name"
												},
												{
													"key": "search",
													"value": "aute amet"
												},
												{
													"key": "perPage",
													"value": "5"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "showDeleted",
													"value": "0"
												}
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/channels?sort=name&search=aute amet&perPage=5&page=1&showDeleted=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"channels"
											],
											"query": [
												{
													"key": "sort",
													"value": "name"
												},
												{
													"key": "search",
													"value": "aute amet"
												},
												{
													"key": "perPage",
													"value": "5"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "showDeleted",
													"value": "0"
												}
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
								}
							]
						},
						{
							"name": "Returns list Groups of Channels.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200, response is json\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.json;",
											"    var jsonData = pm.response.json();",
											"    pm.globals.set(\"groups_id\", jsonData.items[0].id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/channels/groups?perPage=5&page=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"channels",
										"groups"
									],
									"query": [
										{
											"key": "sort",
											"value": "sort",
											"description": "Field by that need to be sorted",
											"disabled": true
										},
										{
											"key": "perPage",
											"value": "5",
											"description": "Count items in page"
										},
										{
											"key": "page",
											"value": "1",
											"description": "Numeric page"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": " (This can only be one of http,https)"
										},
										{
											"key": "environment",
											"value": "{{environment}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns list Groups of Channels.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/channels/groups?sort=sort&perPage=5&page=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"channels",
												"groups"
											],
											"query": [
												{
													"key": "sort",
													"value": "sort"
												},
												{
													"key": "perPage",
													"value": "5"
												},
												{
													"key": "page",
													"value": "1"
												}
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Returned when bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/channels/groups?sort=sort&perPage=5&page=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"channels",
												"groups"
											],
											"query": [
												{
													"key": "sort",
													"value": "sort"
												},
												{
													"key": "perPage",
													"value": "5"
												},
												{
													"key": "page",
													"value": "1"
												}
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"Validation\",\n \"title\": \"Bad Request\",\n \"messages\": {\n  \"propertyPath\": \"eiusmod reprehenderit et fugiat\",\n  \"message\": \"mollit velit laboris reprehenderit adipisicing\"\n }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/channels/groups?sort=sort&perPage=5&page=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"channels",
												"groups"
											],
											"query": [
												{
													"key": "sort",
													"value": "sort"
												},
												{
													"key": "perPage",
													"value": "5"
												},
												{
													"key": "page",
													"value": "1"
												}
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/channels/groups?sort=sort&perPage=5&page=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"channels",
												"groups"
											],
											"query": [
												{
													"key": "sort",
													"value": "sort"
												},
												{
													"key": "perPage",
													"value": "5"
												},
												{
													"key": "page",
													"value": "1"
												}
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "channel",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "info",
									"item": [
										{
											"name": "Return Channel info.",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200, response is json\", function () {",
															"    pm.response.to.have.status(200);",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{TOKEN}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/channel/{{channels_id}}/info",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"channel",
														"{{channels_id}}",
														"info"
													]
												}
											},
											"response": [
												{
													"name": "Return Channel info.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channel/:id/info",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":id",
																"info"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": -46105446,\n \"name\": \"sed \",\n \"id_group\": -28433840,\n \"epg_src\": 28966705,\n \"epg_source\": \"cillum dolore labore\",\n \"status\": false,\n \"is_video\": true,\n \"need_auth\": false,\n \"protected\": true,\n \"comment\": \"ut labore v\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channel/:id/info",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":id",
																"info"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
												},
												{
													"name": "Access Denied",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channel/:id/info",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":id",
																"info"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
												},
												{
													"name": "Returned when the Item is not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channel/:id/info",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":id",
																"info"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 404,\n \"messages\": \"Item not found.\"\n}"
												}
											]
										},
										{
											"name": "Update Channel info.",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200, response is json\", function () {",
															"    pm.response.to.have.status(200);",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{TOKEN}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"laborum vel\",\n    \"id_group\": 9,\n    \"epg_src\": 9,\n    \"epg_source\": \"m\",\n    \"status\": true,\n    \"is_video\": false,\n    \"need_auth\": false,\n    \"protected\": false,\n    \"comment\": \"{{$randomCompanyName}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/channel/:id/info",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"channel",
														":id",
														"info"
													],
													"variable": [
														{
															"key": "id",
															"value": "{{channels_id}}",
															"description": "(Required) Id Channel"
														}
													]
												}
											},
											"response": [
												{
													"name": "Return Channel info.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"laborum vel\",\n    \"id_group\": 82105078,\n    \"epg_src\": 95481041,\n    \"epg_source\": \"m\",\n    \"status\": true,\n    \"is_video\": false,\n    \"need_auth\": false,\n    \"protected\": false,\n    \"comment\": \"pariatur amet\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channel/:id/info",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":id",
																"info"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": -46105446,\n \"name\": \"sed \",\n \"id_group\": -28433840,\n \"epg_src\": 28966705,\n \"epg_source\": \"cillum dolore labore\",\n \"status\": false,\n \"is_video\": true,\n \"need_auth\": false,\n \"protected\": true,\n \"comment\": \"ut labore v\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"laborum vel\",\n    \"id_group\": 82105078,\n    \"epg_src\": 95481041,\n    \"epg_source\": \"m\",\n    \"status\": true,\n    \"is_video\": false,\n    \"need_auth\": false,\n    \"protected\": false,\n    \"comment\": \"pariatur amet\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channel/:id/info",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":id",
																"info"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
												},
												{
													"name": "Access Denied",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"laborum vel\",\n    \"id_group\": 82105078,\n    \"epg_src\": 95481041,\n    \"epg_source\": \"m\",\n    \"status\": true,\n    \"is_video\": false,\n    \"need_auth\": false,\n    \"protected\": false,\n    \"comment\": \"pariatur amet\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channel/:id/info",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":id",
																"info"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
												},
												{
													"name": "Returned when the Item is not found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"laborum vel\",\n    \"id_group\": 82105078,\n    \"epg_src\": 95481041,\n    \"epg_source\": \"m\",\n    \"status\": true,\n    \"is_video\": false,\n    \"need_auth\": false,\n    \"protected\": false,\n    \"comment\": \"pariatur amet\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channel/:id/info",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":id",
																"info"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 404,\n \"messages\": \"Item not found.\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "images",
									"item": [
										{
											"name": "Return Images of Channel.",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200, response is json\", function () {",
															"    pm.response.to.have.status(200);",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{TOKEN}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/channel/:id/images",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"channel",
														":id",
														"images"
													],
													"variable": [
														{
															"key": "id",
															"value": "{{channels_id}}",
															"description": "(Required) Id Channel"
														}
													]
												}
											},
											"response": [
												{
													"name": "Return Images of Channel.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channel/:id/images",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":id",
																"images"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"icon\": \"esse aliqua voluptate\",\n \"epg_image\": \"dolore eiusmod labore exercitation\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channel/:id/images",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":id",
																"images"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
												},
												{
													"name": "Access Denied",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channel/:id/images",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":id",
																"images"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
												},
												{
													"name": "Returned when the Item is not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channel/:id/images",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":id",
																"images"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 404,\n \"messages\": \"Item not found.\"\n}"
												}
											]
										},
										{
											"name": "Update Images of Channel.",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200, response is json\", function () {",
															"    pm.response.to.have.status(200);",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{TOKEN}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"icon\": \"{{icon}}\",\n    \"epg_image\": \"https://imaze.kartina.stream/ui/epg/epg-default.png/resize?width=192&height=192\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/channel/:id/images",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"channel",
														":id",
														"images"
													],
													"variable": [
														{
															"key": "id",
															"value": "{{channels_id}}",
															"description": "(Required) Id Channel"
														}
													]
												}
											},
											"response": [
												{
													"name": "Return Images of Channel data.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"icon\": \"et do veniam enim ut\",\n    \"epg_image\": \"mollit cillum tempor laborum adipis\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channel/:id/images",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":id",
																"images"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"icon\": \"esse aliqua voluptate\",\n \"epg_image\": \"dolore eiusmod labore exercitation\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"icon\": \"et do veniam enim ut\",\n    \"epg_image\": \"mollit cillum tempor laborum adipis\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channel/:id/images",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":id",
																"images"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
												},
												{
													"name": "Access Denied",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"icon\": \"et do veniam enim ut\",\n    \"epg_image\": \"mollit cillum tempor laborum adipis\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channel/:id/images",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":id",
																"images"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
												},
												{
													"name": "Returned when the Item is not found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"icon\": \"et do veniam enim ut\",\n    \"epg_image\": \"mollit cillum tempor laborum adipis\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channel/:id/images",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":id",
																"images"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 404,\n \"messages\": \"Item not found.\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "others",
									"item": [
										{
											"name": "Return Channels other data.",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200, response is json\", function () {",
															"    pm.response.to.have.status(200);",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{TOKEN}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/channel/:id/others",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"channel",
														":id",
														"others"
													],
													"variable": [
														{
															"key": "id",
															"value": "{{channels_id}}",
															"description": "(Required) Id Channel"
														}
													]
												}
											},
											"response": [
												{
													"name": "Return Channels other data.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channel/:id/others",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":id",
																"others"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": 67503115,\n \"stream_src\": \"minim sint consequat in\",\n \"need_bandwidth\": 32705118,\n \"sort\": -68657064,\n \"gag_url\": \"in ex tempor elit amet\",\n \"http_url\": \"nisi reprehenderit\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channel/:id/others",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":id",
																"others"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
												},
												{
													"name": "Access Denied",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channel/:id/others",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":id",
																"others"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
												},
												{
													"name": "Returned when the Item is not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channel/:id/others",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":id",
																"others"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 404,\n \"messages\": \"Item not found.\"\n}"
												}
											]
										},
										{
											"name": "Update Channel other data.",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200, response is json\", function () {",
															"    pm.response.to.have.status(200);",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{TOKEN}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": 779,\n    \"stream_src\": \"\",\n    \"need_bandwidth\": 0,\n    \"sort\": 3,\n    \"http_url\": \"\",\n    \"gag_url\": \"\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/channel/:id/others",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"channel",
														":id",
														"others"
													],
													"variable": [
														{
															"key": "id",
															"value": "{{channels_id}}",
															"description": "(Required) Id Channel"
														}
													]
												}
											},
											"response": [
												{
													"name": "Return Channel other data.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"stream_src\": \"ad\",\n    \"need_bandwidth\": 37951977,\n    \"sort\": 94968487,\n    \"gag_url\": \"tempor consequat commodo cupidatat dolor\",\n    \"http_url\": \"occaecat ei\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channel/:id/others",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":id",
																"others"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": 67503115,\n \"stream_src\": \"minim sint consequat in\",\n \"need_bandwidth\": 32705118,\n \"sort\": -68657064,\n \"gag_url\": \"in ex tempor elit amet\",\n \"http_url\": \"nisi reprehenderit\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"stream_src\": \"ad\",\n    \"need_bandwidth\": 37951977,\n    \"sort\": 94968487,\n    \"gag_url\": \"tempor consequat commodo cupidatat dolor\",\n    \"http_url\": \"occaecat ei\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channel/:id/others",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":id",
																"others"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
												},
												{
													"name": "Access Denied",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"stream_src\": \"ad\",\n    \"need_bandwidth\": 37951977,\n    \"sort\": 94968487,\n    \"gag_url\": \"tempor consequat commodo cupidatat dolor\",\n    \"http_url\": \"occaecat ei\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channel/:id/others",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":id",
																"others"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
												},
												{
													"name": "Returned when the Item is not found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"stream_src\": \"ad\",\n    \"need_bandwidth\": 37951977,\n    \"sort\": 94968487,\n    \"gag_url\": \"tempor consequat commodo cupidatat dolor\",\n    \"http_url\": \"occaecat ei\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channel/:id/others",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":id",
																"others"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 404,\n \"messages\": \"Item not found.\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Delete Channel.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {",
													"    pm.response.to.have.status(204);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/channel/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"channel",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{channels_id}}",
													"description": "(Required) Id Channel"
												}
											]
										}
									},
									"response": [
										{
											"name": "Successful operation. No Content.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/channel/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"channel",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "-43192755",
															"description": "(Required) Id Channel"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/channel/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"channel",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "-43192755",
															"description": "(Required) Id Channel"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/channel/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"channel",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "-43192755",
															"description": "(Required) Id Channel"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
										},
										{
											"name": "Returned when the Item is not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/channel/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"channel",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "-43192755",
															"description": "(Required) Id Channel"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 404,\n \"messages\": \"Item not found.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "{channel Id}",
							"item": [
								{
									"name": "url",
									"item": [
										{
											"name": "Return Channel URLs list.",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200, response is json\", function () {",
															"    pm.response.to.have.status(200);",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{TOKEN}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/channel/:channelId/urls?sort=-hr&perPage=50&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"channel",
														":channelId",
														"urls"
													],
													"query": [
														{
															"key": "sort",
															"value": "-hr",
															"description": "Field by that need to be sorted"
														},
														{
															"key": "perPage",
															"value": "50",
															"description": "Count items in page"
														},
														{
															"key": "page",
															"value": "1",
															"description": "Numeric page"
														}
													],
													"variable": [
														{
															"key": "channelId",
															"value": "{{channels_id}}",
															"description": "(Required) Id Channel"
														}
													]
												}
											},
											"response": [
												{
													"name": "Return Channel URLs list.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channel/:channelId/urls?sort=hr&perPage=5&page=1",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":channelId",
																"urls"
															],
															"query": [
																{
																	"key": "sort",
																	"value": "hr"
																},
																{
																	"key": "perPage",
																	"value": "5"
																},
																{
																	"key": "page",
																	"value": "1"
																}
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "channelId",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"currentPage\": 80121219,\n \"totalPages\": -29072689,\n \"itemsPerPage\": 44674667,\n \"totalItems\": 24546722,\n \"items\": [\n  {\n   \"id_channel\": 32604053,\n   \"hr\": 599831,\n   \"url\": \"in\",\n   \"status\": true,\n   \"id_profile\": 53353485,\n   \"profile\": {\n    \"id\": 74810245,\n    \"title\": \"eiusmod minim deserunt fugiat\"\n   },\n   \"encryption\": {\n    \"id\": 119732,\n    \"title\": \"ut quis aliquip\"\n   }\n  },\n  {\n   \"id_channel\": -28906804,\n   \"hr\": -15907885,\n   \"url\": \"enim proident\",\n   \"status\": false,\n   \"id_profile\": 75576582,\n   \"profile\": {\n    \"id\": -34991543,\n    \"title\": \"i\"\n   },\n   \"encryption\": {\n    \"id\": 14939572,\n    \"title\": \"enim deserunt\"\n   }\n  }\n ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channel/:channelId/urls?sort=hr&perPage=5&page=1",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":channelId",
																"urls"
															],
															"query": [
																{
																	"key": "sort",
																	"value": "hr"
																},
																{
																	"key": "perPage",
																	"value": "5"
																},
																{
																	"key": "page",
																	"value": "1"
																}
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "channelId",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
												},
												{
													"name": "Access Denied",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channel/:channelId/urls?sort=hr&perPage=5&page=1",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":channelId",
																"urls"
															],
															"query": [
																{
																	"key": "sort",
																	"value": "hr"
																},
																{
																	"key": "perPage",
																	"value": "5"
																},
																{
																	"key": "page",
																	"value": "1"
																}
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "channelId",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
												},
												{
													"name": "Returned when the Item is not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channel/:channelId/urls?sort=hr&perPage=5&page=1",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":channelId",
																"urls"
															],
															"query": [
																{
																	"key": "sort",
																	"value": "hr"
																},
																{
																	"key": "perPage",
																	"value": "5"
																},
																{
																	"key": "page",
																	"value": "1"
																}
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "channelId",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 404,\n \"messages\": \"Item not found.\"\n}"
												}
											]
										},
										{
											"name": "Create URL of Channel.",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{TOKEN}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"hr\": 76,\n    \"id_profile\": 1,\n    \"url\": \"{{$randomUrl}}\",\n    \"status\": true,\n    \"encryption_type\": 1\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/channel/:channelId/url",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"channel",
														":channelId",
														"url"
													],
													"variable": [
														{
															"key": "channelId",
															"value": "{{channels_id}}",
															"description": "(Required) Id Channel"
														}
													]
												}
											},
											"response": [
												{
													"name": "Return URL of Channel data.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hr\": 32459941,\n    \"id_profile\": 79577693,\n    \"url\": \"officia quis nostrud proi\",\n    \"status\": false,\n    \"encryption_type\": -54396683,\n    \"epg_source\": \"do \"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channel/:channelId/url",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":channelId",
																"url"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "channelId",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id_channel\": 19851085,\n \"hr\": -83694244,\n \"url\": \"reprehenderit fugiat\",\n \"status\": false,\n \"id_profile\": -39209289,\n \"profile\": {\n  \"id\": 84784318,\n  \"title\": \"nisi minim\"\n },\n \"encryption\": {\n  \"id\": -89668851,\n  \"title\": \"laboris Lorem velit ut commodo\"\n }\n}"
												},
												{
													"name": "Returned when bad request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hr\": 32459941,\n    \"id_profile\": 79577693,\n    \"url\": \"officia quis nostrud proi\",\n    \"status\": false,\n    \"encryption_type\": -54396683,\n    \"epg_source\": \"do \"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channel/:channelId/url",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":channelId",
																"url"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "channelId",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"Validation\",\n \"title\": \"Bad Request\",\n \"messages\": {\n  \"propertyPath\": \"eiusmod reprehenderit et fugiat\",\n  \"message\": \"mollit velit laboris reprehenderit adipisicing\"\n }\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hr\": 32459941,\n    \"id_profile\": 79577693,\n    \"url\": \"officia quis nostrud proi\",\n    \"status\": false,\n    \"encryption_type\": -54396683,\n    \"epg_source\": \"do \"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channel/:channelId/url",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":channelId",
																"url"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "channelId",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
												},
												{
													"name": "Access Denied",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hr\": 32459941,\n    \"id_profile\": 79577693,\n    \"url\": \"officia quis nostrud proi\",\n    \"status\": false,\n    \"encryption_type\": -54396683,\n    \"epg_source\": \"do \"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channel/:channelId/url",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":channelId",
																"url"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "channelId",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
												}
											]
										},
										{
											"name": "Update URL of Channel.",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200, response is json\", function () {",
															"    pm.response.to.have.status(200);",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{TOKEN}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"hr\": 76,\n    \"id_profile\": 1,\n    \"url\": \"{{$randomUrl}}\",\n    \"status\": true,\n    \"encryption_type\": 1\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/channel/{{channels_id}}/url",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"channel",
														"{{channels_id}}",
														"url"
													]
												}
											},
											"response": [
												{
													"name": "Return URL of Channel data.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hr\": 32459941,\n    \"id_profile\": 79577693,\n    \"url\": \"officia quis nostrud proi\",\n    \"status\": false,\n    \"encryption_type\": -54396683,\n    \"epg_source\": \"do \"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channel/:channelId/url",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":channelId",
																"url"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "channelId",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id_channel\": 19851085,\n \"hr\": -83694244,\n \"url\": \"reprehenderit fugiat\",\n \"status\": false,\n \"id_profile\": -39209289,\n \"profile\": {\n  \"id\": 84784318,\n  \"title\": \"nisi minim\"\n },\n \"encryption\": {\n  \"id\": -89668851,\n  \"title\": \"laboris Lorem velit ut commodo\"\n }\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hr\": 32459941,\n    \"id_profile\": 79577693,\n    \"url\": \"officia quis nostrud proi\",\n    \"status\": false,\n    \"encryption_type\": -54396683,\n    \"epg_source\": \"do \"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channel/:channelId/url",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":channelId",
																"url"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "channelId",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
												},
												{
													"name": "Access Denied",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hr\": 32459941,\n    \"id_profile\": 79577693,\n    \"url\": \"officia quis nostrud proi\",\n    \"status\": false,\n    \"encryption_type\": -54396683,\n    \"epg_source\": \"do \"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channel/:channelId/url",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":channelId",
																"url"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "channelId",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
												},
												{
													"name": "Returned when the Item is not found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hr\": 32459941,\n    \"id_profile\": 79577693,\n    \"url\": \"officia quis nostrud proi\",\n    \"status\": false,\n    \"encryption_type\": -54396683,\n    \"epg_source\": \"do \"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channel/:channelId/url",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":channelId",
																"url"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "channelId",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 404,\n \"messages\": \"Item not found.\"\n}"
												}
											]
										},
										{
											"name": "Delete URL of Channel.",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {",
															"    pm.response.to.have.status(204);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{TOKEN}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/channel/:channelId/url/offset/:offset/profile/:profileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"channel",
														":channelId",
														"url",
														"offset",
														":offset",
														"profile",
														":profileId"
													],
													"variable": [
														{
															"key": "channelId",
															"value": "{{channels_id}}",
															"description": "(Required) Id Channel"
														},
														{
															"key": "offset",
															"value": "76",
															"description": "(Required) offset in hours"
														},
														{
															"key": "profileId",
															"value": "1",
															"description": "(Required) Id Profile"
														}
													]
												}
											},
											"response": [
												{
													"name": "Successful operation. No Content.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channel/:channelId/url/offset/:offset/profile/:profileId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":channelId",
																"url",
																"offset",
																":offset",
																"profile",
																":profileId"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "channelId",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																},
																{
																	"key": "offset",
																	"value": "-43192755",
																	"description": "(Required) offset in hours"
																},
																{
																	"key": "profileId",
																	"value": "-43192755",
																	"description": "(Required) Id Profile"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channel/:channelId/url/offset/:offset/profile/:profileId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":channelId",
																"url",
																"offset",
																":offset",
																"profile",
																":profileId"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "channelId",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																},
																{
																	"key": "offset",
																	"value": "-43192755",
																	"description": "(Required) offset in hours"
																},
																{
																	"key": "profileId",
																	"value": "-43192755",
																	"description": "(Required) Id Profile"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
												},
												{
													"name": "Access Denied",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channel/:channelId/url/offset/:offset/profile/:profileId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":channelId",
																"url",
																"offset",
																":offset",
																"profile",
																":profileId"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "channelId",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																},
																{
																	"key": "offset",
																	"value": "-43192755",
																	"description": "(Required) offset in hours"
																},
																{
																	"key": "profileId",
																	"value": "-43192755",
																	"description": "(Required) Id Profile"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
												},
												{
													"name": "Returned when the Item is not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channel/:channelId/url/offset/:offset/profile/:profileId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":channelId",
																"url",
																"offset",
																":offset",
																"profile",
																":profileId"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "channelId",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																},
																{
																	"key": "offset",
																	"value": "-43192755",
																	"description": "(Required) offset in hours"
																},
																{
																	"key": "profileId",
																	"value": "-43192755",
																	"description": "(Required) Id Profile"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 404,\n \"messages\": \"Item not found.\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "geo",
									"item": [
										{
											"name": "Return Channels Geo list.",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200, response is json\", function () {",
															"    pm.response.to.have.status(200);",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{TOKEN}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/channel/:channelId/geo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"channel",
														":channelId",
														"geo"
													],
													"variable": [
														{
															"key": "channelId",
															"value": "{{channels_id}}",
															"description": "(Required) Id Channel"
														}
													]
												}
											},
											"response": [
												{
													"name": "Return Channels Geo list.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channel/:channelId/geo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":channelId",
																"geo"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "channelId",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"id\": -30162699,\n  \"action\": \"allow\",\n  \"country_code\": \"eu est sint veniam\"\n },\n {\n  \"id\": 17347389,\n  \"action\": \"deny\",\n  \"country_code\": \"in in culpa commodo\"\n }\n]"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channel/:channelId/geo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":channelId",
																"geo"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "channelId",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
												},
												{
													"name": "Access Denied",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channel/:channelId/geo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":channelId",
																"geo"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "channelId",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
												}
											]
										},
										{
											"name": "Create Geo of Channel.",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201, response is json\", function () {",
															"    pm.response.to.have.status(201);",
															"    pm.response.to.be.json;",
															"    var jsonData = pm.response.json();",
															"    pm.globals.set(\"geo_id\", jsonData[\"id\"]);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{TOKEN}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"country_code\": \"{{$randomCountryCode}}\",\n    \"action\": \"allow\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/channel/:channelId/geo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"channel",
														":channelId",
														"geo"
													],
													"variable": [
														{
															"key": "channelId",
															"value": "{{channels_id}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Return Geo of Channel data.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"country_code\": \"\",\n    \"action\": \"allow\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channel/:channelId/geo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":channelId",
																"geo"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": -25710730,\n \"action\": \"deny\",\n \"country_code\": \"do magna\"\n}"
												},
												{
													"name": "Returned when bad request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"country_code\": \"\",\n    \"action\": \"allow\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channel/:channelId/geo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":channelId",
																"geo"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"Validation\",\n \"title\": \"Bad Request\",\n \"messages\": {\n  \"propertyPath\": \"eiusmod reprehenderit et fugiat\",\n  \"message\": \"mollit velit laboris reprehenderit adipisicing\"\n }\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"country_code\": \"\",\n    \"action\": \"allow\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channel/:channelId/geo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":channelId",
																"geo"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
												},
												{
													"name": "Access Denied",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"country_code\": \"\",\n    \"action\": \"allow\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/channel/:channelId/geo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":channelId",
																"geo"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "id",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
												}
											]
										},
										{
											"name": "Delete Geo of Channel.",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {",
															"    pm.response.to.have.status(204);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{TOKEN}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/channel/:channelId/geo/:geoId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"channel",
														":channelId",
														"geo",
														":geoId"
													],
													"variable": [
														{
															"key": "channelId",
															"value": "{{channels_id}}",
															"description": "(Required) Id Channel"
														},
														{
															"key": "geoId",
															"value": "{{geo_id}}",
															"description": "(Required) Id Geo"
														}
													]
												}
											},
											"response": [
												{
													"name": "Successful operation. No Content.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channel/:channelId/geo/:geoId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":channelId",
																"geo",
																":geoId"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "channelId",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																},
																{
																	"key": "geoId",
																	"value": "-43192755",
																	"description": "(Required) Id Geo"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channel/:channelId/geo/:geoId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":channelId",
																"geo",
																":geoId"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "channelId",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																},
																{
																	"key": "geoId",
																	"value": "-43192755",
																	"description": "(Required) Id Geo"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
												},
												{
													"name": "Access Denied",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channel/:channelId/geo/:geoId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":channelId",
																"geo",
																":geoId"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "channelId",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																},
																{
																	"key": "geoId",
																	"value": "-43192755",
																	"description": "(Required) Id Geo"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
												},
												{
													"name": "Returned when the Item is not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/channel/:channelId/geo/:geoId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"channel",
																":channelId",
																"geo",
																":geoId"
															],
															"variable": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": " (This can only be one of http,https)"
																},
																{
																	"key": "environment",
																	"value": "{{environment}}"
																},
																{
																	"key": "channelId",
																	"value": "-43192755",
																	"description": "(Required) Id Channel"
																},
																{
																	"key": "geoId",
																	"value": "-43192755",
																	"description": "(Required) Id Geo"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 404,\n \"messages\": \"Item not found.\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "Create Channel.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200, response is json\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.json;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"eiusmod pariatur esse\",\n    \"id_group\": 67793801,\n    \"epg_src\": 17118425,\n    \"epg_source\": \"ea sit sed officia\",\n    \"status\": true,\n    \"is_video\": true,\n    \"need_auth\": true,\n    \"protected\": true,\n    \"comment\": \"qui sint ex ad labore\",\n    \"stream_src\": \"esse sint in dolor eiusmod\",\n    \"need_bandwidth\": 17463178,\n    \"sort\": 43791986,\n    \"gag_url\": \"ad nostrud quis\",\n    \"http_url\": \"Excepteur id\",\n    \"icon\": \"ullamco sunt\",\n    \"epg_image\": \"amet dolor pariatur anim laborum\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/channel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"channel"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": " (This can only be one of http,https)"
										},
										{
											"key": "environment",
											"value": "{{environment}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Return Channel Info data.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"eiusmod pariatur esse\",\n    \"id_group\": 67793801,\n    \"epg_src\": 17118425,\n    \"epg_source\": \"ea sit sed officia\",\n    \"status\": true,\n    \"is_video\": true,\n    \"need_auth\": true,\n    \"protected\": true,\n    \"comment\": \"qui sint ex ad labore\",\n    \"stream_src\": \"esse sint in dolor eiusmod\",\n    \"need_bandwidth\": 17463178,\n    \"sort\": 43791986,\n    \"gag_url\": \"ad nostrud quis\",\n    \"http_url\": \"Excepteur id\",\n    \"icon\": \"ullamco sunt\",\n    \"epg_image\": \"amet dolor pariatur anim laborum\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/channel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"channel"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": -46105446,\n \"name\": \"sed \",\n \"id_group\": -28433840,\n \"epg_src\": 28966705,\n \"epg_source\": \"cillum dolore labore\",\n \"status\": false,\n \"is_video\": true,\n \"need_auth\": false,\n \"protected\": true,\n \"comment\": \"ut labore v\"\n}"
								},
								{
									"name": "Returned when bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"eiusmod pariatur esse\",\n    \"id_group\": 67793801,\n    \"epg_src\": 17118425,\n    \"epg_source\": \"ea sit sed officia\",\n    \"status\": true,\n    \"is_video\": true,\n    \"need_auth\": true,\n    \"protected\": true,\n    \"comment\": \"qui sint ex ad labore\",\n    \"stream_src\": \"esse sint in dolor eiusmod\",\n    \"need_bandwidth\": 17463178,\n    \"sort\": 43791986,\n    \"gag_url\": \"ad nostrud quis\",\n    \"http_url\": \"Excepteur id\",\n    \"icon\": \"ullamco sunt\",\n    \"epg_image\": \"amet dolor pariatur anim laborum\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/channel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"channel"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"Validation\",\n \"title\": \"Bad Request\",\n \"messages\": {\n  \"propertyPath\": \"eiusmod reprehenderit et fugiat\",\n  \"message\": \"mollit velit laboris reprehenderit adipisicing\"\n }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"eiusmod pariatur esse\",\n    \"id_group\": 67793801,\n    \"epg_src\": 17118425,\n    \"epg_source\": \"ea sit sed officia\",\n    \"status\": true,\n    \"is_video\": true,\n    \"need_auth\": true,\n    \"protected\": true,\n    \"comment\": \"qui sint ex ad labore\",\n    \"stream_src\": \"esse sint in dolor eiusmod\",\n    \"need_bandwidth\": 17463178,\n    \"sort\": 43791986,\n    \"gag_url\": \"ad nostrud quis\",\n    \"http_url\": \"Excepteur id\",\n    \"icon\": \"ullamco sunt\",\n    \"epg_image\": \"amet dolor pariatur anim laborum\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/channel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"channel"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"eiusmod pariatur esse\",\n    \"id_group\": 67793801,\n    \"epg_src\": 17118425,\n    \"epg_source\": \"ea sit sed officia\",\n    \"status\": true,\n    \"is_video\": true,\n    \"need_auth\": true,\n    \"protected\": true,\n    \"comment\": \"qui sint ex ad labore\",\n    \"stream_src\": \"esse sint in dolor eiusmod\",\n    \"need_bandwidth\": 17463178,\n    \"sort\": 43791986,\n    \"gag_url\": \"ad nostrud quis\",\n    \"http_url\": \"Excepteur id\",\n    \"icon\": \"ullamco sunt\",\n    \"epg_image\": \"amet dolor pariatur anim laborum\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/channel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"channel"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "packet",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Create Packet.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200, response is json\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.be.json;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"{{$randomNameSuffix}}\",\n  \"sort\": 0,\n  \"archive_allow\": true,\n  \"vod_allow\": true,\n  \"tntpremier_allow\": true,\n  \"kinopoisk_allow\": true,\n  \"pamg_allow\": true,\n  \"okkotv_allow\": true,\n  \"filmua_allow\": true,\n  \"moretv_allow\": true,\n  \"litresru_allow\": true,\n  \"start_film_allow\": true,\n  \"start_film_payable\": 0,\n  \"megogo_allow\": true,\n  \"ivi_allow\": true,\n  \"geot_disable\": true,\n  \"max_sessions\": 1,\n  \"sess_ip_reject\": true,\n  \"def_bitrate\": 0,\n  \"def_server\": \"string\",\n  \"status\": true,\n  \"type\": \"general\",\n  \"profiles\": [\n    1\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/packet",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"packet"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Return Packet data.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"cillum in\",\n    \"sort\": 48467116,\n    \"archive_allow\": true,\n    \"vod_allow\": false,\n    \"tntpremier_allow\": false,\n    \"kinopoisk_allow\": true,\n    \"pamg_allow\": true,\n    \"okkotv_allow\": false,\n    \"filmua_allow\": false,\n    \"moretv_allow\": false,\n    \"litresru_allow\": false,\n    \"start_film_allow\": true,\n    \"start_film_payable\": 88541490,\n    \"megogo_allow\": true,\n    \"ivi_allow\": false,\n    \"geot_disable\": true,\n    \"max_sessions\": 88259613,\n    \"sess_ip_reject\": false,\n    \"def_bitrate\": 33246403,\n    \"def_server\": \"labore et \",\n    \"status\": false,\n    \"type\": \"general\",\n    \"profiles\": [\n        14473532,\n        40559749\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/packet",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"packet"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": 84656352,\n \"name\": \"culpa \",\n \"sort\": -88949700,\n \"archive_allow\": true,\n \"vod_allow\": false,\n \"tntpremier_allow\": true,\n \"kinopoisk_allow\": false,\n \"pamg_allow\": true,\n \"okkotv_allow\": true,\n \"filmua_allow\": true,\n \"moretv_allow\": false,\n \"litresru_allow\": true,\n \"start_film_allow\": false,\n \"start_film_payable\": -96147133,\n \"megogo_allow\": true,\n \"ivi_allow\": true,\n \"geot_disable\": true,\n \"max_sessions\": -45903289,\n \"sess_ip_reject\": true,\n \"def_bitrate\": 57132255,\n \"def_server\": \"ipsum non ex Lorem\",\n \"status\": false,\n \"type\": \"general\",\n \"profiles\": [\n  -48511851,\n  62757489\n ]\n}"
										},
										{
											"name": "Returned when bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"cillum in\",\n    \"sort\": 48467116,\n    \"archive_allow\": true,\n    \"vod_allow\": false,\n    \"tntpremier_allow\": false,\n    \"kinopoisk_allow\": true,\n    \"pamg_allow\": true,\n    \"okkotv_allow\": false,\n    \"filmua_allow\": false,\n    \"moretv_allow\": false,\n    \"litresru_allow\": false,\n    \"start_film_allow\": true,\n    \"start_film_payable\": 88541490,\n    \"megogo_allow\": true,\n    \"ivi_allow\": false,\n    \"geot_disable\": true,\n    \"max_sessions\": 88259613,\n    \"sess_ip_reject\": false,\n    \"def_bitrate\": 33246403,\n    \"def_server\": \"labore et \",\n    \"status\": false,\n    \"type\": \"general\",\n    \"profiles\": [\n        14473532,\n        40559749\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/packet",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"packet"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"Validation\",\n \"title\": \"Bad Request\",\n \"messages\": {\n  \"propertyPath\": \"eiusmod reprehenderit et fugiat\",\n  \"message\": \"mollit velit laboris reprehenderit adipisicing\"\n }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"cillum in\",\n    \"sort\": 48467116,\n    \"archive_allow\": true,\n    \"vod_allow\": false,\n    \"tntpremier_allow\": false,\n    \"kinopoisk_allow\": true,\n    \"pamg_allow\": true,\n    \"okkotv_allow\": false,\n    \"filmua_allow\": false,\n    \"moretv_allow\": false,\n    \"litresru_allow\": false,\n    \"start_film_allow\": true,\n    \"start_film_payable\": 88541490,\n    \"megogo_allow\": true,\n    \"ivi_allow\": false,\n    \"geot_disable\": true,\n    \"max_sessions\": 88259613,\n    \"sess_ip_reject\": false,\n    \"def_bitrate\": 33246403,\n    \"def_server\": \"labore et \",\n    \"status\": false,\n    \"type\": \"general\",\n    \"profiles\": [\n        14473532,\n        40559749\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/packet",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"packet"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"cillum in\",\n    \"sort\": 48467116,\n    \"archive_allow\": true,\n    \"vod_allow\": false,\n    \"tntpremier_allow\": false,\n    \"kinopoisk_allow\": true,\n    \"pamg_allow\": true,\n    \"okkotv_allow\": false,\n    \"filmua_allow\": false,\n    \"moretv_allow\": false,\n    \"litresru_allow\": false,\n    \"start_film_allow\": true,\n    \"start_film_payable\": 88541490,\n    \"megogo_allow\": true,\n    \"ivi_allow\": false,\n    \"geot_disable\": true,\n    \"max_sessions\": 88259613,\n    \"sess_ip_reject\": false,\n    \"def_bitrate\": 33246403,\n    \"def_server\": \"labore et \",\n    \"status\": false,\n    \"type\": \"general\",\n    \"profiles\": [\n        14473532,\n        40559749\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/packet",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"packet"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
										}
									]
								},
								{
									"name": "Returns list Packets.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200, response is json\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.be.json;",
													"    var jsonData = pm.response.json();",
													"    pm.globals.set(\"packets_id\", jsonData.items[1].id);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/packets?perPage=5&page=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"packets"
											],
											"query": [
												{
													"key": "sort",
													"value": "sort",
													"description": "Field by that need to be sorted",
													"disabled": true
												},
												{
													"key": "search",
													"value": "aute amet",
													"description": "Values that need to be considered for search",
													"disabled": true
												},
												{
													"key": "perPage",
													"value": "5",
													"description": "Count items in page"
												},
												{
													"key": "page",
													"value": "1",
													"description": "Numeric page"
												}
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Returns list Packets.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/packets?sort=sort&search=aute amet&perPage=5&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"packets"
													],
													"query": [
														{
															"key": "sort",
															"value": "sort"
														},
														{
															"key": "search",
															"value": "aute amet"
														},
														{
															"key": "perPage",
															"value": "5"
														},
														{
															"key": "page",
															"value": "1"
														}
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Returned when bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/packets?sort=sort&search=aute amet&perPage=5&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"packets"
													],
													"query": [
														{
															"key": "sort",
															"value": "sort"
														},
														{
															"key": "search",
															"value": "aute amet"
														},
														{
															"key": "perPage",
															"value": "5"
														},
														{
															"key": "page",
															"value": "1"
														}
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"Validation\",\n \"title\": \"Bad Request\",\n \"messages\": {\n  \"propertyPath\": \"eiusmod reprehenderit et fugiat\",\n  \"message\": \"mollit velit laboris reprehenderit adipisicing\"\n }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/packets?sort=sort&search=aute amet&perPage=5&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"packets"
													],
													"query": [
														{
															"key": "sort",
															"value": "sort"
														},
														{
															"key": "search",
															"value": "aute amet"
														},
														{
															"key": "perPage",
															"value": "5"
														},
														{
															"key": "page",
															"value": "1"
														}
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/packets?sort=sort&search=aute amet&perPage=5&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"packets"
													],
													"query": [
														{
															"key": "sort",
															"value": "sort"
														},
														{
															"key": "search",
															"value": "aute amet"
														},
														{
															"key": "perPage",
															"value": "5"
														},
														{
															"key": "page",
															"value": "1"
														}
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
										}
									]
								},
								{
									"name": "Return Packet data.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200, response is json\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.be.json;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/packet/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"packet",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{packets_id}}",
													"description": "(Required) Id Packet"
												}
											]
										}
									},
									"response": [
										{
											"name": "Return Packet data.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/packet/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"packet",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "-43192755",
															"description": "(Required) Id Packet"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": -26370115,\n \"name\": \"elit proident ullamco\",\n \"sort\": -60807223,\n \"archive_allow\": true,\n \"vod_allow\": true,\n \"tntpremier_allow\": false,\n \"kinopoisk_allow\": true,\n \"pamg_allow\": true,\n \"okkotv_allow\": false,\n \"filmua_allow\": true,\n \"moretv_allow\": true,\n \"litresru_allow\": true,\n \"start_film_allow\": true,\n \"start_film_payable\": 31855092,\n \"megogo_allow\": false,\n \"ivi_allow\": true,\n \"geot_disable\": false,\n \"max_sessions\": 6383588,\n \"sess_ip_reject\": true,\n \"def_bitrate\": 86476499,\n \"def_server\": \"tem\",\n \"status\": false,\n \"type\": \"vip\",\n \"profiles\": [\n  68503882,\n  49024195\n ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/packet/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"packet",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "-43192755",
															"description": "(Required) Id Packet"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/packet/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"packet",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "-43192755",
															"description": "(Required) Id Packet"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
										},
										{
											"name": "Returned when the Item is not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/packet/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"packet",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "-43192755",
															"description": "(Required) Id Packet"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 404,\n \"messages\": \"Item not found.\"\n}"
										}
									]
								},
								{
									"name": "Update Packet data.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200, response is json\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.be.json;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": 1111,\n    \"name\": \"Премиум\",\n    \"sort\": 3,\n    \"archive_allow\": true,\n    \"vod_allow\": true,\n    \"tntpremier_allow\": true,\n    \"kinopoisk_allow\": false,\n    \"pamg_allow\": true,\n    \"okkotv_allow\": true,\n    \"filmua_allow\": true,\n    \"moretv_allow\": true,\n    \"litresru_allow\": true,\n    \"start_film_allow\": true,\n    \"start_film_payable\": 0,\n    \"megogo_allow\": true,\n    \"ivi_allow\": true,\n    \"geot_disable\": false,\n    \"max_sessions\": 3,\n    \"sess_ip_reject\": true,\n    \"def_bitrate\": {{bitrate}},\n    \"def_server\": null,\n    \"status\": true,\n    \"type\": \"general\",\n    \"profiles\": [\n        1,\n        3,\n        5,\n        7,\n        9,\n        13\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/packet/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"packet",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{packets_id}}",
													"description": "(Required) Id Packet"
												}
											]
										}
									},
									"response": [
										{
											"name": "Return Packet data.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"cillum in\",\n    \"sort\": 48467116,\n    \"archive_allow\": true,\n    \"vod_allow\": false,\n    \"tntpremier_allow\": false,\n    \"kinopoisk_allow\": true,\n    \"pamg_allow\": true,\n    \"okkotv_allow\": false,\n    \"filmua_allow\": false,\n    \"moretv_allow\": false,\n    \"litresru_allow\": false,\n    \"start_film_allow\": true,\n    \"start_film_payable\": 88541490,\n    \"megogo_allow\": true,\n    \"ivi_allow\": false,\n    \"geot_disable\": true,\n    \"max_sessions\": 88259613,\n    \"sess_ip_reject\": false,\n    \"def_bitrate\": 33246403,\n    \"def_server\": \"labore et \",\n    \"status\": false,\n    \"type\": \"general\",\n    \"profiles\": [\n        14473532,\n        40559749\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/packet/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"packet",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "-43192755",
															"description": "(Required) Id Packet"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": -26370115,\n \"name\": \"elit proident ullamco\",\n \"sort\": -60807223,\n \"archive_allow\": true,\n \"vod_allow\": true,\n \"tntpremier_allow\": false,\n \"kinopoisk_allow\": true,\n \"pamg_allow\": true,\n \"okkotv_allow\": false,\n \"filmua_allow\": true,\n \"moretv_allow\": true,\n \"litresru_allow\": true,\n \"start_film_allow\": true,\n \"start_film_payable\": 31855092,\n \"megogo_allow\": false,\n \"ivi_allow\": true,\n \"geot_disable\": false,\n \"max_sessions\": 6383588,\n \"sess_ip_reject\": true,\n \"def_bitrate\": 86476499,\n \"def_server\": \"tem\",\n \"status\": false,\n \"type\": \"vip\",\n \"profiles\": [\n  68503882,\n  49024195\n ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"cillum in\",\n    \"sort\": 48467116,\n    \"archive_allow\": true,\n    \"vod_allow\": false,\n    \"tntpremier_allow\": false,\n    \"kinopoisk_allow\": true,\n    \"pamg_allow\": true,\n    \"okkotv_allow\": false,\n    \"filmua_allow\": false,\n    \"moretv_allow\": false,\n    \"litresru_allow\": false,\n    \"start_film_allow\": true,\n    \"start_film_payable\": 88541490,\n    \"megogo_allow\": true,\n    \"ivi_allow\": false,\n    \"geot_disable\": true,\n    \"max_sessions\": 88259613,\n    \"sess_ip_reject\": false,\n    \"def_bitrate\": 33246403,\n    \"def_server\": \"labore et \",\n    \"status\": false,\n    \"type\": \"general\",\n    \"profiles\": [\n        14473532,\n        40559749\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/packet/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"packet",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "-43192755",
															"description": "(Required) Id Packet"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"cillum in\",\n    \"sort\": 48467116,\n    \"archive_allow\": true,\n    \"vod_allow\": false,\n    \"tntpremier_allow\": false,\n    \"kinopoisk_allow\": true,\n    \"pamg_allow\": true,\n    \"okkotv_allow\": false,\n    \"filmua_allow\": false,\n    \"moretv_allow\": false,\n    \"litresru_allow\": false,\n    \"start_film_allow\": true,\n    \"start_film_payable\": 88541490,\n    \"megogo_allow\": true,\n    \"ivi_allow\": false,\n    \"geot_disable\": true,\n    \"max_sessions\": 88259613,\n    \"sess_ip_reject\": false,\n    \"def_bitrate\": 33246403,\n    \"def_server\": \"labore et \",\n    \"status\": false,\n    \"type\": \"general\",\n    \"profiles\": [\n        14473532,\n        40559749\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/packet/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"packet",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "-43192755",
															"description": "(Required) Id Packet"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
										},
										{
											"name": "Returned when the Item is not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"cillum in\",\n    \"sort\": 48467116,\n    \"archive_allow\": true,\n    \"vod_allow\": false,\n    \"tntpremier_allow\": false,\n    \"kinopoisk_allow\": true,\n    \"pamg_allow\": true,\n    \"okkotv_allow\": false,\n    \"filmua_allow\": false,\n    \"moretv_allow\": false,\n    \"litresru_allow\": false,\n    \"start_film_allow\": true,\n    \"start_film_payable\": 88541490,\n    \"megogo_allow\": true,\n    \"ivi_allow\": false,\n    \"geot_disable\": true,\n    \"max_sessions\": 88259613,\n    \"sess_ip_reject\": false,\n    \"def_bitrate\": 33246403,\n    \"def_server\": \"labore et \",\n    \"status\": false,\n    \"type\": \"general\",\n    \"profiles\": [\n        14473532,\n        40559749\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/packet/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"packet",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "-43192755",
															"description": "(Required) Id Packet"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 404,\n \"messages\": \"Item not found.\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "product",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Returns list Products.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200, response is json\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.be.json;",
													"    var jsonData = pm.response.json();",
													"    pm.globals.set(\"products_id\", jsonData.items[0].id);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/products?perPage=5&page=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"products"
											],
											"query": [
												{
													"key": "sort",
													"value": "id",
													"description": "Field by that need to be sorted",
													"disabled": true
												},
												{
													"key": "search",
													"value": "aute amet",
													"description": "Values that need to be considered for search",
													"disabled": true
												},
												{
													"key": "perPage",
													"value": "5",
													"description": "Count items in page"
												},
												{
													"key": "page",
													"value": "1",
													"description": "Numeric page"
												}
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Returns list Products.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/products?sort=id&search=aute amet&perPage=5&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products"
													],
													"query": [
														{
															"key": "sort",
															"value": "id"
														},
														{
															"key": "search",
															"value": "aute amet"
														},
														{
															"key": "perPage",
															"value": "5"
														},
														{
															"key": "page",
															"value": "1"
														}
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Returned when bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/products?sort=id&search=aute amet&perPage=5&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products"
													],
													"query": [
														{
															"key": "sort",
															"value": "id"
														},
														{
															"key": "search",
															"value": "aute amet"
														},
														{
															"key": "perPage",
															"value": "5"
														},
														{
															"key": "page",
															"value": "1"
														}
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"Validation\",\n \"title\": \"Bad Request\",\n \"messages\": {\n  \"propertyPath\": \"eiusmod reprehenderit et fugiat\",\n  \"message\": \"mollit velit laboris reprehenderit adipisicing\"\n }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/products?sort=id&search=aute amet&perPage=5&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products"
													],
													"query": [
														{
															"key": "sort",
															"value": "id"
														},
														{
															"key": "search",
															"value": "aute amet"
														},
														{
															"key": "perPage",
															"value": "5"
														},
														{
															"key": "page",
															"value": "1"
														}
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/products?sort=id&search=aute amet&perPage=5&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products"
													],
													"query": [
														{
															"key": "sort",
															"value": "id"
														},
														{
															"key": "search",
															"value": "aute amet"
														},
														{
															"key": "perPage",
															"value": "5"
														},
														{
															"key": "page",
															"value": "1"
														}
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
										}
									]
								},
								{
									"name": "Return Product data.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200, response is json\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.be.json;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"product",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{products_id}}",
													"description": "(Required) Id Product"
												}
											]
										}
									},
									"response": [
										{
											"name": "Return Product data.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"product",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "aute amet",
															"description": "(Required) Id Product"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"reprehenderit\",\n \"store\": -67709245,\n \"type\": \"subscription\",\n \"period\": -43566784,\n \"packet_id\": -47643739,\n \"country\": [\n  \"mollit Ut in\",\n  \"velit sint\"\n ],\n \"expired_at\": \"Ut est\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"product",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "aute amet",
															"description": "(Required) Id Product"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"product",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "aute amet",
															"description": "(Required) Id Product"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
										},
										{
											"name": "Returned when the Item is not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"product",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "aute amet",
															"description": "(Required) Id Product"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 404,\n \"messages\": \"Item not found.\"\n}"
										}
									]
								},
								{
									"name": "Create Product.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201, response is json\", function () {",
													"    pm.response.to.have.status(201);",
													"    pm.response.to.be.json;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{$randomExampleEmail}}\",\n    \"store\": 3,\n    \"type\": \"purchase\",\n    \"period\": 365,\n    \"packet_id\": 270,\n    \"country\": [\n       \"{{$randomCountryCode}}\"\n    ],\n    \"expired_at\": \"2023-05-04 09:08:56\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"product"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Return Product data.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"pariatur laborum ex quis\",\n    \"store\": 52370459,\n    \"type\": \"purchase\",\n    \"period\": 89375025,\n    \"packet_id\": 87974744,\n    \"country\": [\n        \"co\",\n        \"in\"\n    ],\n    \"expired_at\": \"ut elit\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"product"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"qui officia Lorem aliquip\",\n \"store\": 28164576,\n \"type\": \"subscription\",\n \"period\": -37989733,\n \"packet_id\": 59714186,\n \"country\": [\n  \"irure\",\n  \"mollit fugiat\"\n ],\n \"expired_at\": \"labore cupidatat incididunt aliqua\"\n}"
										},
										{
											"name": "Returned when bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"pariatur laborum ex quis\",\n    \"store\": 52370459,\n    \"type\": \"purchase\",\n    \"period\": 89375025,\n    \"packet_id\": 87974744,\n    \"country\": [\n        \"co\",\n        \"in\"\n    ],\n    \"expired_at\": \"ut elit\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"product"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"Validation\",\n \"title\": \"Bad Request\",\n \"messages\": {\n  \"propertyPath\": \"eiusmod reprehenderit et fugiat\",\n  \"message\": \"mollit velit laboris reprehenderit adipisicing\"\n }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"pariatur laborum ex quis\",\n    \"store\": 52370459,\n    \"type\": \"purchase\",\n    \"period\": 89375025,\n    \"packet_id\": 87974744,\n    \"country\": [\n        \"co\",\n        \"in\"\n    ],\n    \"expired_at\": \"ut elit\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"product"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"pariatur laborum ex quis\",\n    \"store\": 52370459,\n    \"type\": \"purchase\",\n    \"period\": 89375025,\n    \"packet_id\": 87974744,\n    \"country\": [\n        \"co\",\n        \"in\"\n    ],\n    \"expired_at\": \"ut elit\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"product"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
										}
									]
								},
								{
									"name": "Update Product data.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200, response is json\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.be.json;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"store\": 3,\n    \"type\": \"purchase\",\n    \"period\": 365,\n    \"packet_id\": {{packets_id}},\n    \"country\": [\n       \"{{$randomCountryCode}}\"\n    ],\n    \"expired_at\": \"2021-05-04 09:08:56\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"product",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{products_id}}",
													"description": "(Required) Id Product"
												}
											]
										}
									},
									"response": [
										{
											"name": "Return Product data.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"store\": 70155695,\n    \"type\": \"subscription\",\n    \"period\": 37341828,\n    \"packet_id\": 75048747,\n    \"country\": [\n        \"te\",\n        \"se\"\n    ],\n    \"expired_at\": \"fugiat dolore sunt\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"product",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "aute amet",
															"description": "(Required) Id Product"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"reprehenderit\",\n \"store\": -67709245,\n \"type\": \"subscription\",\n \"period\": -43566784,\n \"packet_id\": -47643739,\n \"country\": [\n  \"mollit Ut in\",\n  \"velit sint\"\n ],\n \"expired_at\": \"Ut est\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"store\": 70155695,\n    \"type\": \"subscription\",\n    \"period\": 37341828,\n    \"packet_id\": 75048747,\n    \"country\": [\n        \"te\",\n        \"se\"\n    ],\n    \"expired_at\": \"fugiat dolore sunt\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"product",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "aute amet",
															"description": "(Required) Id Product"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"store\": 70155695,\n    \"type\": \"subscription\",\n    \"period\": 37341828,\n    \"packet_id\": 75048747,\n    \"country\": [\n        \"te\",\n        \"se\"\n    ],\n    \"expired_at\": \"fugiat dolore sunt\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"product",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "aute amet",
															"description": "(Required) Id Product"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
										},
										{
											"name": "Returned when the Item is not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"store\": 70155695,\n    \"type\": \"subscription\",\n    \"period\": 37341828,\n    \"packet_id\": 75048747,\n    \"country\": [\n        \"te\",\n        \"se\"\n    ],\n    \"expired_at\": \"fugiat dolore sunt\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"product",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "aute amet",
															"description": "(Required) Id Product"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 404,\n \"messages\": \"Item not found.\"\n}"
										}
									]
								},
								{
									"name": "Delete Product.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {",
													"    pm.response.to.have.status(204);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"product",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{products_id}}",
													"description": "(Required) Id Product"
												}
											]
										}
									},
									"response": [
										{
											"name": "Successful operation. No Content.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"product",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "aute amet",
															"description": "(Required) Id Product"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"product",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "aute amet",
															"description": "(Required) Id Product"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"product",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "aute amet",
															"description": "(Required) Id Product"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
										},
										{
											"name": "Returned when the Item is not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"product",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "aute amet",
															"description": "(Required) Id Product"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 404,\n \"messages\": \"Item not found.\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "device",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Returns list Devices.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200, response is json\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.be.json;",
													"    var jsonData = pm.response.json();",
													"    pm.globals.set(\"devices_id\", jsonData.items[0].id);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/devices?perPage=5&page=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"devices"
											],
											"query": [
												{
													"key": "sort",
													"value": "softid",
													"description": "Field by that need to be sorted",
													"disabled": true
												},
												{
													"key": "search",
													"value": "aute amet",
													"description": "Values that need to be considered for search",
													"disabled": true
												},
												{
													"key": "perPage",
													"value": "5",
													"description": "Count items in page"
												},
												{
													"key": "page",
													"value": "1",
													"description": "Numeric page"
												}
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Returns list Devices.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/devices?sort=softid&search=aute amet&perPage=5&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"devices"
													],
													"query": [
														{
															"key": "sort",
															"value": "softid"
														},
														{
															"key": "search",
															"value": "aute amet"
														},
														{
															"key": "perPage",
															"value": "5"
														},
														{
															"key": "page",
															"value": "1"
														}
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Returned when bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/devices?sort=softid&search=aute amet&perPage=5&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"devices"
													],
													"query": [
														{
															"key": "sort",
															"value": "softid"
														},
														{
															"key": "search",
															"value": "aute amet"
														},
														{
															"key": "perPage",
															"value": "5"
														},
														{
															"key": "page",
															"value": "1"
														}
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"Validation\",\n \"title\": \"Bad Request\",\n \"messages\": {\n  \"propertyPath\": \"eiusmod reprehenderit et fugiat\",\n  \"message\": \"mollit velit laboris reprehenderit adipisicing\"\n }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/devices?sort=softid&search=aute amet&perPage=5&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"devices"
													],
													"query": [
														{
															"key": "sort",
															"value": "softid"
														},
														{
															"key": "search",
															"value": "aute amet"
														},
														{
															"key": "perPage",
															"value": "5"
														},
														{
															"key": "page",
															"value": "1"
														}
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/devices?sort=softid&search=aute amet&perPage=5&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"devices"
													],
													"query": [
														{
															"key": "sort",
															"value": "softid"
														},
														{
															"key": "search",
															"value": "aute amet"
														},
														{
															"key": "perPage",
															"value": "5"
														},
														{
															"key": "page",
															"value": "1"
														}
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
										}
									]
								},
								{
									"name": "Return Device data.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200, response is json\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.be.json;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/device/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"device",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{devices_id}}",
													"description": "(Required) Id Device"
												}
											]
										}
									},
									"response": [
										{
											"name": "Return Device data.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/device/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"device",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "-43192755",
															"description": "(Required) Id Device"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": -38824773,\n \"softid\": \"minim irure voluptate\",\n \"type\": \"stb\",\n \"descr\": \"officia velit ad commodo\",\n \"contact\": \"quis nostrud pariatur\",\n \"default_streamstandard\": \"udt_h264\",\n \"ivi_config\": {\n  \"subsite_id\": -34022645,\n  \"app_version\": 5589362\n },\n \"start_film_config\": {\n  \"token\": \"reprehenderit ex id nisi\"\n },\n \"disable_adult_channels\": true,\n \"support_config\": {\n  \"dash\": true,\n  \"hls\": true,\n  \"udt\": true,\n  \"verimatrix\": true,\n  \"tr069\": false,\n  \"https\": false,\n  \"kartina_app\": false,\n  \"teleteka\": false,\n  \"trial_error\": true\n },\n \"support_source\": {\n  \"ivi\": true,\n  \"megogo\": false,\n  \"start_film\": true,\n  \"moretv\": false,\n  \"filmua\": false,\n  \"okkotv\": true,\n  \"mediateka\": true,\n  \"pamg\": false,\n  \"kinopoisk\": true,\n  \"tntpremier\": false,\n  \"litresru\": false\n }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/device/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"device",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "-43192755",
															"description": "(Required) Id Device"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/device/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"device",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "-43192755",
															"description": "(Required) Id Device"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
										},
										{
											"name": "Returned when the Item is not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/device/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"device",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "-43192755",
															"description": "(Required) Id Device"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 404,\n \"messages\": \"Item not found.\"\n}"
										}
									]
								},
								{
									"name": "Update Device data.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200, response is json\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.be.json;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"softid\": \"aminoweb-ktv-001\",\n    \"type\": \"stb\",\n    \"descr\": \"Amino old web interface\",\n    \"contact\": \"{{$randomUserName}}\",\n    \"default_streamstandard\": \"{{device-standard}}\",\n    \"ivi_config\": null,\n    \"start_film_config\": null,\n    \"disable_adult_channels\": false,\n    \"support_config\": {\n        \"dash\": true,\n        \"hls\": false,\n        \"udt\": false,\n        \"verimatrix\": false,\n        \"tr069\": false,\n        \"https\": false,\n        \"kartina_app\": false,\n        \"teleteka\": false,\n        \"trial_error\": false\n    },\n    \"support_source\": {\n        \"ivi\": false,\n        \"megogo\": false,\n        \"start_film\": false,\n        \"moretv\": false,\n        \"filmua\": false,\n        \"okkotv\": false,\n        \"mediateka\": true,\n        \"pamg\": false,\n        \"kinopoisk\": false,\n        \"tntpremier\": false,\n        \"litresru\": false\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/device/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"device",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "31",
													"description": "(Required) Id Device"
												}
											]
										}
									},
									"response": [
										{
											"name": "Return Device data.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"softid\": \"qui et irure nostrud\",\n    \"type\": \"application\",\n    \"descr\": \"quis\",\n    \"contact\": \"non quis dolor\",\n    \"default_streamstandard\": \"\",\n    \"ivi_config\": {\n        \"subsite_id\": -49883427,\n        \"app_version\": 47999540\n    },\n    \"start_film_config\": {\n        \"token\": \"in aute velit\"\n    },\n    \"disable_adult_channels\": true,\n    \"support_config\": {\n        \"dash\": true,\n        \"hls\": false,\n        \"udt\": true,\n        \"verimatrix\": false,\n        \"tr069\": true,\n        \"https\": false,\n        \"kartina_app\": false,\n        \"teleteka\": false,\n        \"trial_error\": true\n    },\n    \"support_source\": {\n        \"ivi\": false,\n        \"megogo\": false,\n        \"start_film\": true,\n        \"moretv\": true,\n        \"filmua\": false,\n        \"okkotv\": false,\n        \"mediateka\": false,\n        \"pamg\": true,\n        \"kinopoisk\": false,\n        \"tntpremier\": true,\n        \"litresru\": false\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/device/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"device",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "-43192755",
															"description": "(Required) Id Device"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": -38824773,\n \"softid\": \"minim irure voluptate\",\n \"type\": \"stb\",\n \"descr\": \"officia velit ad commodo\",\n \"contact\": \"quis nostrud pariatur\",\n \"default_streamstandard\": \"udt_h264\",\n \"ivi_config\": {\n  \"subsite_id\": -34022645,\n  \"app_version\": 5589362\n },\n \"start_film_config\": {\n  \"token\": \"reprehenderit ex id nisi\"\n },\n \"disable_adult_channels\": true,\n \"support_config\": {\n  \"dash\": true,\n  \"hls\": true,\n  \"udt\": true,\n  \"verimatrix\": true,\n  \"tr069\": false,\n  \"https\": false,\n  \"kartina_app\": false,\n  \"teleteka\": false,\n  \"trial_error\": true\n },\n \"support_source\": {\n  \"ivi\": true,\n  \"megogo\": false,\n  \"start_film\": true,\n  \"moretv\": false,\n  \"filmua\": false,\n  \"okkotv\": true,\n  \"mediateka\": true,\n  \"pamg\": false,\n  \"kinopoisk\": true,\n  \"tntpremier\": false,\n  \"litresru\": false\n }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"softid\": \"qui et irure nostrud\",\n    \"type\": \"application\",\n    \"descr\": \"quis\",\n    \"contact\": \"non quis dolor\",\n    \"default_streamstandard\": \"\",\n    \"ivi_config\": {\n        \"subsite_id\": -49883427,\n        \"app_version\": 47999540\n    },\n    \"start_film_config\": {\n        \"token\": \"in aute velit\"\n    },\n    \"disable_adult_channels\": true,\n    \"support_config\": {\n        \"dash\": true,\n        \"hls\": false,\n        \"udt\": true,\n        \"verimatrix\": false,\n        \"tr069\": true,\n        \"https\": false,\n        \"kartina_app\": false,\n        \"teleteka\": false,\n        \"trial_error\": true\n    },\n    \"support_source\": {\n        \"ivi\": false,\n        \"megogo\": false,\n        \"start_film\": true,\n        \"moretv\": true,\n        \"filmua\": false,\n        \"okkotv\": false,\n        \"mediateka\": false,\n        \"pamg\": true,\n        \"kinopoisk\": false,\n        \"tntpremier\": true,\n        \"litresru\": false\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/device/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"device",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "-43192755",
															"description": "(Required) Id Device"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"softid\": \"qui et irure nostrud\",\n    \"type\": \"application\",\n    \"descr\": \"quis\",\n    \"contact\": \"non quis dolor\",\n    \"default_streamstandard\": \"\",\n    \"ivi_config\": {\n        \"subsite_id\": -49883427,\n        \"app_version\": 47999540\n    },\n    \"start_film_config\": {\n        \"token\": \"in aute velit\"\n    },\n    \"disable_adult_channels\": true,\n    \"support_config\": {\n        \"dash\": true,\n        \"hls\": false,\n        \"udt\": true,\n        \"verimatrix\": false,\n        \"tr069\": true,\n        \"https\": false,\n        \"kartina_app\": false,\n        \"teleteka\": false,\n        \"trial_error\": true\n    },\n    \"support_source\": {\n        \"ivi\": false,\n        \"megogo\": false,\n        \"start_film\": true,\n        \"moretv\": true,\n        \"filmua\": false,\n        \"okkotv\": false,\n        \"mediateka\": false,\n        \"pamg\": true,\n        \"kinopoisk\": false,\n        \"tntpremier\": true,\n        \"litresru\": false\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/device/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"device",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "-43192755",
															"description": "(Required) Id Device"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
										},
										{
											"name": "Returned when the Item is not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"softid\": \"qui et irure nostrud\",\n    \"type\": \"application\",\n    \"descr\": \"quis\",\n    \"contact\": \"non quis dolor\",\n    \"default_streamstandard\": \"\",\n    \"ivi_config\": {\n        \"subsite_id\": -49883427,\n        \"app_version\": 47999540\n    },\n    \"start_film_config\": {\n        \"token\": \"in aute velit\"\n    },\n    \"disable_adult_channels\": true,\n    \"support_config\": {\n        \"dash\": true,\n        \"hls\": false,\n        \"udt\": true,\n        \"verimatrix\": false,\n        \"tr069\": true,\n        \"https\": false,\n        \"kartina_app\": false,\n        \"teleteka\": false,\n        \"trial_error\": true\n    },\n    \"support_source\": {\n        \"ivi\": false,\n        \"megogo\": false,\n        \"start_film\": true,\n        \"moretv\": true,\n        \"filmua\": false,\n        \"okkotv\": false,\n        \"mediateka\": false,\n        \"pamg\": true,\n        \"kinopoisk\": false,\n        \"tntpremier\": true,\n        \"litresru\": false\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/device/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"device",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "-43192755",
															"description": "(Required) Id Device"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 404,\n \"messages\": \"Item not found.\"\n}"
										}
									]
								},
								{
									"name": "Delete Device.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {",
													"    pm.response.to.have.status(204);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/device/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"device",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{devices_id}}",
													"description": "(Required) Id Device"
												}
											]
										}
									},
									"response": [
										{
											"name": "Successful operation. No Content.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/device/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"device",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "-43192755",
															"description": "(Required) Id Device"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/device/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"device",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "-43192755",
															"description": "(Required) Id Device"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/device/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"device",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "-43192755",
															"description": "(Required) Id Device"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
										},
										{
											"name": "Returned when the Item is not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/device/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"device",
														":id"
													],
													"variable": [
														{
															"key": "protocol",
															"value": "{{protocol}}",
															"description": " (This can only be one of http,https)"
														},
														{
															"key": "environment",
															"value": "{{environment}}"
														},
														{
															"key": "id",
															"value": "-43192755",
															"description": "(Required) Id Device"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 404,\n \"messages\": \"Item not found.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Create Device.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "<Bearer Token>",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"softid\": \"qui et irure nostrud\",\n    \"type\": \"application\",\n    \"descr\": \"quis\",\n    \"contact\": \"non quis dolor\",\n    \"default_streamstandard\": \"\",\n    \"ivi_config\": {\n        \"subsite_id\": -49883427,\n        \"app_version\": 47999540\n    },\n    \"start_film_config\": {\n        \"token\": \"in aute velit\"\n    },\n    \"disable_adult_channels\": true,\n    \"support_config\": {\n        \"dash\": true,\n        \"hls\": false,\n        \"udt\": true,\n        \"verimatrix\": false,\n        \"tr069\": true,\n        \"https\": false,\n        \"kartina_app\": false,\n        \"teleteka\": false,\n        \"trial_error\": true\n    },\n    \"support_source\": {\n        \"ivi\": false,\n        \"megogo\": false,\n        \"start_film\": true,\n        \"moretv\": true,\n        \"filmua\": false,\n        \"okkotv\": false,\n        \"mediateka\": false,\n        \"pamg\": true,\n        \"kinopoisk\": false,\n        \"tntpremier\": true,\n        \"litresru\": false\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/device",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"device"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": " (This can only be one of http,https)"
										},
										{
											"key": "environment",
											"value": "{{environment}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Return Device data.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"softid\": \"qui et irure nostrud\",\n    \"type\": \"application\",\n    \"descr\": \"quis\",\n    \"contact\": \"non quis dolor\",\n    \"default_streamstandard\": \"\",\n    \"ivi_config\": {\n        \"subsite_id\": -49883427,\n        \"app_version\": 47999540\n    },\n    \"start_film_config\": {\n        \"token\": \"in aute velit\"\n    },\n    \"disable_adult_channels\": true,\n    \"support_config\": {\n        \"dash\": true,\n        \"hls\": false,\n        \"udt\": true,\n        \"verimatrix\": false,\n        \"tr069\": true,\n        \"https\": false,\n        \"kartina_app\": false,\n        \"teleteka\": false,\n        \"trial_error\": true\n    },\n    \"support_source\": {\n        \"ivi\": false,\n        \"megogo\": false,\n        \"start_film\": true,\n        \"moretv\": true,\n        \"filmua\": false,\n        \"okkotv\": false,\n        \"mediateka\": false,\n        \"pamg\": true,\n        \"kinopoisk\": false,\n        \"tntpremier\": true,\n        \"litresru\": false\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/device",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"device"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": -38824773,\n \"softid\": \"minim irure voluptate\",\n \"type\": \"stb\",\n \"descr\": \"officia velit ad commodo\",\n \"contact\": \"quis nostrud pariatur\",\n \"default_streamstandard\": \"udt_h264\",\n \"ivi_config\": {\n  \"subsite_id\": -34022645,\n  \"app_version\": 5589362\n },\n \"start_film_config\": {\n  \"token\": \"reprehenderit ex id nisi\"\n },\n \"disable_adult_channels\": true,\n \"support_config\": {\n  \"dash\": true,\n  \"hls\": true,\n  \"udt\": true,\n  \"verimatrix\": true,\n  \"tr069\": false,\n  \"https\": false,\n  \"kartina_app\": false,\n  \"teleteka\": false,\n  \"trial_error\": true\n },\n \"support_source\": {\n  \"ivi\": true,\n  \"megogo\": false,\n  \"start_film\": true,\n  \"moretv\": false,\n  \"filmua\": false,\n  \"okkotv\": true,\n  \"mediateka\": true,\n  \"pamg\": false,\n  \"kinopoisk\": true,\n  \"tntpremier\": false,\n  \"litresru\": false\n }\n}"
								},
								{
									"name": "Returned when bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"softid\": \"qui et irure nostrud\",\n    \"type\": \"application\",\n    \"descr\": \"quis\",\n    \"contact\": \"non quis dolor\",\n    \"default_streamstandard\": \"\",\n    \"ivi_config\": {\n        \"subsite_id\": -49883427,\n        \"app_version\": 47999540\n    },\n    \"start_film_config\": {\n        \"token\": \"in aute velit\"\n    },\n    \"disable_adult_channels\": true,\n    \"support_config\": {\n        \"dash\": true,\n        \"hls\": false,\n        \"udt\": true,\n        \"verimatrix\": false,\n        \"tr069\": true,\n        \"https\": false,\n        \"kartina_app\": false,\n        \"teleteka\": false,\n        \"trial_error\": true\n    },\n    \"support_source\": {\n        \"ivi\": false,\n        \"megogo\": false,\n        \"start_film\": true,\n        \"moretv\": true,\n        \"filmua\": false,\n        \"okkotv\": false,\n        \"mediateka\": false,\n        \"pamg\": true,\n        \"kinopoisk\": false,\n        \"tntpremier\": true,\n        \"litresru\": false\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/device",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"device"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"Validation\",\n \"title\": \"Bad Request\",\n \"messages\": {\n  \"propertyPath\": \"eiusmod reprehenderit et fugiat\",\n  \"message\": \"mollit velit laboris reprehenderit adipisicing\"\n }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"softid\": \"qui et irure nostrud\",\n    \"type\": \"application\",\n    \"descr\": \"quis\",\n    \"contact\": \"non quis dolor\",\n    \"default_streamstandard\": \"\",\n    \"ivi_config\": {\n        \"subsite_id\": -49883427,\n        \"app_version\": 47999540\n    },\n    \"start_film_config\": {\n        \"token\": \"in aute velit\"\n    },\n    \"disable_adult_channels\": true,\n    \"support_config\": {\n        \"dash\": true,\n        \"hls\": false,\n        \"udt\": true,\n        \"verimatrix\": false,\n        \"tr069\": true,\n        \"https\": false,\n        \"kartina_app\": false,\n        \"teleteka\": false,\n        \"trial_error\": true\n    },\n    \"support_source\": {\n        \"ivi\": false,\n        \"megogo\": false,\n        \"start_film\": true,\n        \"moretv\": true,\n        \"filmua\": false,\n        \"okkotv\": false,\n        \"mediateka\": false,\n        \"pamg\": true,\n        \"kinopoisk\": false,\n        \"tntpremier\": true,\n        \"litresru\": false\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/device",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"device"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 401,\n \"message\": \"Expired JWT Token\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"softid\": \"qui et irure nostrud\",\n    \"type\": \"application\",\n    \"descr\": \"quis\",\n    \"contact\": \"non quis dolor\",\n    \"default_streamstandard\": \"\",\n    \"ivi_config\": {\n        \"subsite_id\": -49883427,\n        \"app_version\": 47999540\n    },\n    \"start_film_config\": {\n        \"token\": \"in aute velit\"\n    },\n    \"disable_adult_channels\": true,\n    \"support_config\": {\n        \"dash\": true,\n        \"hls\": false,\n        \"udt\": true,\n        \"verimatrix\": false,\n        \"tr069\": true,\n        \"https\": false,\n        \"kartina_app\": false,\n        \"teleteka\": false,\n        \"trial_error\": true\n    },\n    \"support_source\": {\n        \"ivi\": false,\n        \"megogo\": false,\n        \"start_film\": true,\n        \"moretv\": true,\n        \"filmua\": false,\n        \"okkotv\": false,\n        \"mediateka\": false,\n        \"pamg\": true,\n        \"kinopoisk\": false,\n        \"tntpremier\": true,\n        \"litresru\": false\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/device",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"device"
											],
											"variable": [
												{
													"key": "protocol",
													"value": "{{protocol}}",
													"description": " (This can only be one of http,https)"
												},
												{
													"key": "environment",
													"value": "{{environment}}"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 403,\n \"message\": \"Access Denied.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "General information.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200, response is json\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/dashboard",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"dashboard"
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": " (This can only be one of http,https)"
								},
								{
									"key": "environment",
									"value": "{{environment}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful operation.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"dashboard"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": " (This can only be one of http,https)"
										},
										{
											"key": "environment",
											"value": "{{environment}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{TOKEN}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "/authentication_token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"TOKEN\", jsonData.token);",
							"pm.test(\"Status code is 200, response is json\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"admin\",\n    \"password\": \"admin\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/authentication_token",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"authentication_token"
					],
					"variable": [
						{
							"key": "protocol",
							"value": "{{protocol}}",
							"description": " (This can only be one of http,https)"
						},
						{
							"key": "environment",
							"value": "{{environment}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "Successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"email.@gmail.com\",\n    \"password\": \"t5r4e3w2q1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/authentication_token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authentication_token"
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": " (This can only be one of http,https)"
								},
								{
									"key": "environment",
									"value": "{{environment}}"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"variable": [
		{
			"key": "protocol",
			"value": "https",
			"type": "any",
			"description": " (This can only be one of http,https)"
		},
		{
			"key": "environment",
			"value": "localhost:8000",
			"type": "any"
		},
		{
			"key": "baseUrl",
			"value": "{{protocol}}://{{environment}}/",
			"type": "string"
		}
	]
}